{
    "swagger": "2.0",
    "info": {
        "description": "Marketo Rest API",
        "version": "1.0",
        "title": "Marketo Rest API",
        "termsOfService": "https://www.marketo.com/company/legal/",
        "contact": {
            "name": "Marketo Developer Relations",
            "url": "http://developers.marketo.com",
            "email": "developerfeedback@marketo.com"
        },
        "license": {
            "name": "API License Agreement",
            "url": "http://developers.marketo.com/api-license/"
        }
    },
    "host": "123-TXT-456.mktorest.com",
    "basePath": "/",
    "schemes": ["https"],
    "tags": [
        {
            "name": "Leads",
            "description": "Leads Controller"
        },
        {
            "name": "Sales Persons",
            "description": "Sales Persons Controller"
        },
        {
            "name": "Activities",
            "description": "Activities Controller"
        },
        {
            "name": "Bulk Import Custom Objects",
            "description": "Bulk Import Custom Objects Controller"
        },
        {
            "name": "Bulk Import Program Members",
            "description": "Bulk Import Program Members Controller"
        },
        {
            "name": "Campaigns",
            "description": "Campaigns Controller"
        },
        {
            "name": "Opportunities",
            "description": "Opportunities Controller"
        },
        {
            "name": "Custom Objects",
            "description": "Custom Objects Controller"
        },
        {
            "name": "Usage",
            "description": "Stats Controller"
        },
        {
            "name": "Bulk Import Leads",
            "description": "Bulk Import Leads Controller"
        },
        {
            "name": "Static Lists",
            "description": "Lists Controller"
        },
        {
            "name": "Bulk Export Activities",
            "description": "Bulk Export Activities Controller"
        },
        {
            "name": "Named Account Lists",
            "description": "Named Account Lists Controller"
        },
        {
            "name": "Bulk Export Leads",
            "description": "Bulk Export Leads Controller"
        },
        {
            "name": "Bulk Export Program Members",
            "description": "Bulk Export Program Members Controller"
        },
        {
            "name": "Bulk Export Custom Objects",
            "description": "Bulk Export Custom Objects Controller"
        },
        {
            "name": "Companies",
            "description": "Companies Controller"
        },
        {
            "name": "Named Accounts",
            "description": "Named Accounts Controller"
        },
        {
            "name": "Program Members",
            "description": "Program Members Controller"
        }
    ],
    "paths": {
        "/bulk/v1/activities/export.json": {
            "get": {
                "tags": ["Bulk Export Activities"],
                "summary": "Get Export Activity Jobs",
                "description": "Returns a list of export jobs that were created in the past 7 days.  Required Permissions: Read-Only Activity",
                "operationId": "getExportActivitiesUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Comma separated list of statuses to filter on.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "created",
                            "queued",
                            "processing",
                            "cancelled",
                            "completed",
                            "failed"
                        ]
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return. The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponseWithToken"
                        }
                    }
                }
            }
        },
        "/bulk/v1/activities/export/create.json": {
            "post": {
                "tags": ["Bulk Export Activities"],
                "summary": "Create Export Activity Job",
                "description": "Create export job for search criteria defined via \"filter\" parameter.  Request returns the \"exportId\" which is passed as a parameter in subsequent calls to Bulk Export Activities endpoints.  Use Enqueue Export Activity Job endpoint to queue the export job for processing.  Use Get Export Activity Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Activity",
                "operationId": "createExportActivitiesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "exportActivityRequest",
                        "description": "exportActivityRequest<br><br>ColumnHeaderNames: A JSON object containing key-value pairs of field and column header names.<br><br>Example:<br><code>\"columnHeaderNames\":{<br>  \"primaryAttributeValueId\":\"Attribute ID\",<br>  \"primaryAttributeValue\":\"Attribute Value\",<br>  \"attributes\":\"Secondary Attributes\"<br>}</code><br>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportActivityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/activities/export/{exportId}/cancel.json": {
            "post": {
                "tags": ["Bulk Export Activities"],
                "summary": "Cancel Export Activity Job",
                "description": "Cancel export job.  Required Permissions: Read-Only Activity",
                "operationId": "cancelExportActivitiesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/activities/export/{exportId}/enqueue.json": {
            "post": {
                "tags": ["Bulk Export Activities"],
                "summary": "Enqueue Export Activity Job",
                "description": "Enqueue export job. This will place export job in queue, and will start the job when computing resources become available.  The export job must be in \"Created\" state.  Use Get Export Activity Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Activity",
                "operationId": "enqueueExportActivitiesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/activities/export/{exportId}/file.json": {
            "get": {
                "tags": ["Bulk Export Activities"],
                "summary": "Get Export Activity File",
                "description": "Returns the file content of an export job.  The export job must be in \"Completed\" state.  Use Get Export Activity Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Activity<br><br>The file format is specified by calling the Create Export Activity Job endpoint. The following is an example of the default file format (\"CSV\"). Note that the \"attributes\" field is formatted as JSON.<br><br><code>marketoGUID,leadId,activityDate,activityTypeId,campaignId,primaryAttributeValueId,primaryAttributeValue, attributes</code><br><code>122323,6,2013-09-26T06:56:35+0000,12,11,6,Owyliphys Iledil,[{\"name\":\"Source Type\",\"value\":\"Web page visit\"}]</code>",
                "operationId": "getExportActivitiesFileUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Range",
                        "in": "header",
                        "description": "To support partial retrieval of extracted data, the HTTP header \"Range\" of type \"bytes\" may be specified.  See RFC 2616 \"Range Retrieval Requests\" for more information. If the header is not set, the entire contents will be returned.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObservableOfInputStreamRangeContent"
                        }
                    }
                }
            }
        },
        "/bulk/v1/activities/export/{exportId}/status.json": {
            "get": {
                "tags": ["Bulk Export Activities"],
                "summary": "Get Export Activity Job Status",
                "description": "Returns status of an export job.  Job status is available for 30 days after Completed or Failed status was reached. Required Permissions: Read-Only Activity",
                "operationId": "getExportActivitiesStatusUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/customobjects/{apiName}/import.json": {
            "post": {
                "tags": ["Bulk Import Custom Objects"],
                "summary": "Import Custom Objects",
                "description": "Imports a file containing data records into the target instance.  Required Permissions: Read-Write Custom Object",
                "operationId": "importCustomObjectUsingPOST",
                "consumes": ["multipart/form-data"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object for the import batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Import file format.",
                        "required": true,
                        "type": "string",
                        "enum": ["csv", "tsv", "ssv"]
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "File containing the data records to import.",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfImportCustomObjectResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/customobjects/{apiName}/import/{batchId}/failures.json": {
            "get": {
                "tags": ["Bulk Import Custom Objects"],
                "summary": "Get Import Custom Object Failures",
                "description": "Returns the list of failures for the import batch job.  Required Permissions: Read-Write Custom Object",
                "operationId": "getImportCustomObjectFailuresUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object for the import batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "Id of the import batch job.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObservableOfInputStreamContent"
                        }
                    }
                }
            }
        },
        "/bulk/v1/customobjects/{apiName}/import/{batchId}/status.json": {
            "get": {
                "tags": ["Bulk Import Custom Objects"],
                "summary": "Get Import Custom Object Status",
                "description": "Returns the status of an import batch job.  Required Permissions: Read-Write Custom Object",
                "operationId": "getImportCustomObjectStatusUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object for the import batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "Id of the import batch job.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfImportCustomObjectResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/customobjects/{apiName}/import/{batchId}/warnings.json": {
            "get": {
                "tags": ["Bulk Import Custom Objects"],
                "summary": "Get Import Custom Object Warnings",
                "description": "Returns the list of warnings for the import batch job.  Required Permissions: Read-Write Custom Object",
                "operationId": "getImportCustomObjectWarningsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object for the import batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "Id of the import batch job.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObservableOfInputStreamContent"
                        }
                    }
                }
            }
        },
        "/bulk/v1/program/{programId}/members/import.json": {
            "post": {
                "tags": ["Bulk Import Program Members"],
                "summary": "Import Program Members",
                "description": "Imports a file containing data records into the target instance.  Required Permissions: Read-Write Lead",
                "operationId": "importProgramMemberUsingPOST",
                "consumes": ["multipart/form-data"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Id of the program to add members to.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "programMemberStatus",
                        "in": "query",
                        "description": "Program member status for members being added.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Import file format.",
                        "required": true,
                        "type": "string",
                        "enum": ["CSV", "TSV", "SSV"]
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "File containing the data records to import.",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfImportProgramMemberResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/program/members/import/{batchId}/failures.json": {
            "get": {
                "tags": ["Bulk Import Program Members"],
                "summary": "Get Import Program Member Failures",
                "description": "Returns the list of failures for the import batch job.  Required Permissions: Read-Write Lead",
                "operationId": "getImportProgramMemberFailuresUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "Id of the import batch job.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObservableOfInputStreamContent"
                        }
                    }
                }
            }
        },
        "/bulk/v1/program/members/import/{batchId}/status.json": {
            "get": {
                "tags": ["Bulk Import Program Members"],
                "summary": "Get Import Program Member Status",
                "description": "Returns the status of an import batch job.  Required Permissions: Read-Write Lead",
                "operationId": "getImportProgramMemberStatusUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "Id of the import batch job.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfImportProgramMemberResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/program/members/import/{batchId}/warnings.json": {
            "get": {
                "tags": ["Bulk Import Program Members"],
                "summary": "Get Import Program Member Warnings",
                "description": "Returns the list of warnings for the import batch job.  Required Permissions: Read-Write Lead",
                "operationId": "getImportProgramMemberWarningsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "Id of the import batch job.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObservableOfInputStreamContent"
                        }
                    }
                }
            }
        },
        "/bulk/v1/leads.json": {
            "post": {
                "tags": ["Bulk Import Leads"],
                "summary": "Import Leads",
                "description": "Imports a file containing data records into the target instance.  Required Permissions: Read-Write Lead",
                "operationId": "importLeadUsingPOST",
                "consumes": ["multipart/form-data"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Import file format.",
                        "required": true,
                        "type": "string",
                        "enum": ["csv", "tsv", "ssv"]
                    },
                    {
                        "name": "lookupField",
                        "in": "query",
                        "description": "Field to use for deduplication.  Custom fields (string, email, integer), and the following field types are supported: id, cookies, email, twitterId, facebookId, linkedInId, sfdcAccountId, sfdcContactId, sfdcLeadId, sfdcLeadOwnerId, sfdcOpptyId.  Default is email.<br>Note: You can use id for update only operations. ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "partitionName",
                        "in": "query",
                        "description": "Name of the lead partition to import to.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "listId",
                        "in": "query",
                        "description": "Id of the static list to import into.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "File containing the data records to import.",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfImportLeadResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/leads/batch/{batchId}.json": {
            "get": {
                "tags": ["Bulk Import Leads"],
                "summary": "Get Import Lead Status",
                "description": "Returns the status of an import batch job.  Required Permissions: Read-Write Lead",
                "operationId": "getImportLeadStatusUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "Id of the import batch job.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfImportLeadResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/leads/batch/{batchId}/failures.json": {
            "get": {
                "tags": ["Bulk Import Leads"],
                "summary": "Get Import Lead Failures",
                "description": "Returns the list of failures for the import batch job.  Required Permissions: Read-Write Lead",
                "operationId": "getImportLeadFailuresUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "Id of the import batch job.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObservableOfInputStreamContent"
                        }
                    }
                }
            }
        },
        "/bulk/v1/leads/batch/{batchId}/warnings.json": {
            "get": {
                "tags": ["Bulk Import Leads"],
                "summary": "Get Import Lead Warnings",
                "description": "Returns the list of warnings for the import batch job.  Required Permissions: Read-Write Lead",
                "operationId": "getImportLeadWarningsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "batchId",
                        "in": "path",
                        "description": "Id of the import batch job.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObservableOfInputStreamContent"
                        }
                    }
                }
            }
        },
        "/bulk/v1/leads/export.json": {
            "get": {
                "tags": ["Bulk Export Leads"],
                "summary": "Get Export Lead Jobs",
                "description": "Returns a list of export jobs that were created in the past 7 days.  Required Permissions: Read-Only Lead",
                "operationId": "getExportLeadsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Comma separated list of statuses to filter on.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "created",
                            "queued",
                            "processing",
                            "cancelled",
                            "completed",
                            "failed"
                        ]
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return. The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponseWithToken"
                        }
                    }
                }
            }
        },
        "/bulk/v1/leads/export/create.json": {
            "post": {
                "tags": ["Bulk Export Leads"],
                "summary": "Create Export Lead Job",
                "description": "Create export job for search criteria defined via \"filter\" parameter.  Request returns the \"exportId\" which is passed as a parameter in subsequent calls to Bulk Export Leads endpoints.  Use Enqueue Export Lead Job endpoint to queue the export job for processing.  Use Get Export Lead Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead",
                "operationId": "createExportLeadsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "exportLeadRequest",
                        "description": "exportLeadRequest<br><br>ColumnHeaderNames: A JSON object containing key-value pairs of field and column header names.<br><br>Example:<br><code>\"columnHeaderNames\":{<br>  \"firstName\":\"First Name\",<br>  \"lastName\":\"Last Name\",<br>  \"email\":\"Email Address\"<br>}</code><br>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportLeadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/leads/export/{exportId}/cancel.json": {
            "post": {
                "tags": ["Bulk Export Leads"],
                "summary": "Cancel Export Lead Job",
                "description": "Cancel export job.  Required Permissions: Read-Only Lead",
                "operationId": "cancelExportLeadsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/leads/export/{exportId}/enqueue.json": {
            "post": {
                "tags": ["Bulk Export Leads"],
                "summary": "Enqueue Export Lead Job",
                "description": "Enqueue export job. This will place export job in queue, and will start the job when computing resources become available.  The export job must be in \"Created\" state.  Use Get Export Lead Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead",
                "operationId": "enqueueExportLeadsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/leads/export/{exportId}/file.json": {
            "get": {
                "tags": ["Bulk Export Leads"],
                "summary": "Get Export Lead File",
                "description": "Returns the file content of an export job.  The export job must be in \"Completed\" state.  Use Get Export Lead Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead<br><br>The file format is specified by calling the Create Export Lead Job endpoint. The following is an example of the default file format (\"CSV\").<br><br><code>firstName,lastName,email</code><br><code>Marvin,Gaye,marvin.gaye@motown.com</code>",
                "operationId": "getExportLeadsFileUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Range",
                        "in": "header",
                        "description": "To support partial retrieval of extracted data, the HTTP header \"Range\" of type \"bytes\" may be specified.  See RFC 2616 \"Range Retrieval Requests\" for more information. If the header is not set, the entire contents will be returned.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObservableOfInputStreamRangeContent"
                        }
                    }
                }
            }
        },
        "/bulk/v1/leads/export/{exportId}/status.json": {
            "get": {
                "tags": ["Bulk Export Leads"],
                "summary": "Get Export Lead Job Status",
                "description": "Returns status of an export job.  Job status is available for 30 days after Completed or Failed status was reached. Required Permissions: Read-Only Lead",
                "operationId": "getExportLeadsStatusUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/customobjects/{apiName}/export.json": {
            "get": {
                "tags": ["Bulk Export Custom Objects"],
                "summary": "Get Export Custom Object Jobs",
                "description": "Returns a list of export jobs that were created in the past 7 days.  Required Permissions: Read-Only Custom Object",
                "operationId": "getExportCustomObjectsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object for the export batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Comma separated list of statuses to filter on.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "created",
                            "queued",
                            "processing",
                            "cancelled",
                            "completed",
                            "failed"
                        ]
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return. The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponseWithToken"
                        }
                    }
                }
            }
        },
        "/bulk/v1/customobjects/{apiName}/export/create.json": {
            "post": {
                "tags": ["Bulk Export Custom Objects"],
                "summary": "Create Export Custom Object Job",
                "description": "Create export job for search criteria defined via \"filter\" parameter.  Request returns the \"exportId\" which is passed as a parameter in subsequent calls to Bulk Export Custom Object endpoints.  Use Enqueue Export Custom Object Job endpoint to queue the export job for processing.  Use Get Export Custom Object Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Custom Object",
                "operationId": "createExportCustomObjectsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object for the export batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "exportCustomObjectRequest",
                        "description": "exportCustomObjectRequest<br><br>ColumnHeaderNames: A JSON object containing key-value pairs of custom object attributes and column header names.<br><br>Example:<br><code>\"columnHeaderNames\":{<br>  \"attrName1\":\"value1\",<br>  \"attrName2\":\"value2\",<br>  \"attrName3\":\"value3\"<br>}</code><br>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportCustomObjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/customobjects/{apiName}/export/{exportId}/cancel.json": {
            "post": {
                "tags": ["Bulk Export Custom Objects"],
                "summary": "Cancel Export Custom Object Job",
                "description": "Cancel export job.  Required Permissions: Read-Only Custom Object",
                "operationId": "cancelExportCustomObjectsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object for the export batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/customobjects/{apiName}/export/{exportId}/enqueue.json": {
            "post": {
                "tags": ["Bulk Export Custom Objects"],
                "summary": "Enqueue Export Custom Object Job",
                "description": "Enqueue export job. This will place export job in queue, and will start the job when computing resources become available.  The export job must be in \"Created\" state.  Use Get Export Custom Object Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Custom Object",
                "operationId": "enqueueExportCustomObjectsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object for the export batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/customobjects/{apiName}/export/{exportId}/file.json": {
            "get": {
                "tags": ["Bulk Export Custom Objects"],
                "summary": "Get Export Custom Object File",
                "description": "Returns the file content of an export job.  The export job must be in \"Completed\" state.  Use Get Export Custom Object Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Custom Object<br><br>The file format is specified by calling the Create Export Custom Object Job endpoint. The following is an example of the default file format (\"CSV\").<br><br><code>leadId,marketoGUID,itemName</code><br><code>11,c93f0494-bbd9-44e8-9c0e-dae9b525073f,Hoka One One Mach 4</code>",
                "operationId": "getExportCustomObjectsFileUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object for the export batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Range",
                        "in": "header",
                        "description": "To support partial retrieval of extracted data, the HTTP header \"Range\" of type \"bytes\" may be specified.  See RFC 2616 \"Range Retrieval Requests\" for more information. If the header is not set, the entire contents will be returned.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObservableOfInputStreamRangeContent"
                        }
                    }
                }
            }
        },
        "/bulk/v1/customobjects/{apiName}/export/{exportId}/status.json": {
            "get": {
                "tags": ["Bulk Export Custom Objects"],
                "summary": "Get Export Custom Object Job Status",
                "description": "Returns status of an export job.  Job status is available for 30 days after Completed or Failed status was reached. Required Permissions: Read-Only Custom Object",
                "operationId": "getExportCustomObjectsStatusUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object for the export batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/program/members/export.json": {
            "get": {
                "tags": ["Bulk Export Program Members"],
                "summary": "Get Export Program Member Jobs",
                "description": "Returns a list of export jobs that were created in the past 7 days.  Required Permissions: Read-Only Lead",
                "operationId": "getExportProgramMembersUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Comma separated list of statuses to filter on.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "created",
                            "queued",
                            "processing",
                            "cancelled",
                            "completed",
                            "failed"
                        ]
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return. The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponseWithToken"
                        }
                    }
                }
            }
        },
        "/bulk/v1/program/members/export/create.json": {
            "post": {
                "tags": ["Bulk Export Program Members"],
                "summary": "Create Export Program Member Job",
                "description": "Create export job for search criteria defined via \"filter\" parameter.  Request returns the \"exportId\" which is passed as a parameter in subsequent calls to Bulk Export Program Members endpoints.  Use Enqueue Export Program Member Job endpoint to queue the export job for processing.  Use Get Export Program Member Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead",
                "operationId": "createExportProgramMembersUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "exportProgramMemberRequest",
                        "description": "exportProgramMemberRequest<br><br>ColumnHeaderNames: A JSON object containing key-value pairs of field and column header names.<br><br>Example:<br><code>\"columnHeaderNames\":{<br>  \"firstName\":\"First Name\",<br>  \"lastName\":\"Last Name\",<br>  \"email\":\"Email Address\"<br>}</code><br>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ExportProgramMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/program/members/export/{exportId}/cancel.json": {
            "post": {
                "tags": ["Bulk Export Program Members"],
                "summary": "Cancel Export Program Member Job",
                "description": "Cancel export job.  Required Permissions: Read-Only Lead",
                "operationId": "cancelExportProgramMembersUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/program/members/export/{exportId}/enqueue.json": {
            "post": {
                "tags": ["Bulk Export Program Members"],
                "summary": "Enqueue Export Program Member Job",
                "description": "Enqueue export job. This will place export job in queue, and will start the job when computing resources become available.  The export job must be in \"Created\" state.  Use Get Export Program Member Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead",
                "operationId": "enqueueExportProgramMembersUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/bulk/v1/program/members/export/{exportId}/file.json": {
            "get": {
                "tags": ["Bulk Export Program Members"],
                "summary": "Get Export Program Member File",
                "description": "Returns the file content of an export job.  The export job must be in \"Completed\" state.  Use Get Export Program Member Job Status endpoint to retrieve status of export job.  Required Permissions: Read-Only Lead<br><br>The file format is specified by calling the Create Export Program Member Job endpoint. The following is an example of the default file format (\"CSV\").<br><br><code>firstName,lastName,email</code><br><code>Marvin,Gaye,marvin.gaye@motown.com</code>",
                "operationId": "getExportProgramMembersFileUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Range",
                        "in": "header",
                        "description": "To support partial retrieval of extracted data, the HTTP header \"Range\" of type \"bytes\" may be specified.  See RFC 2616 \"Range Retrieval Requests\" for more information. If the header is not set, the entire contents will be returned.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ObservableOfInputStreamRangeContent"
                        }
                    }
                }
            }
        },
        "/bulk/v1/program/members/export/{exportId}/status.json": {
            "get": {
                "tags": ["Bulk Export Program Members"],
                "summary": "Get Export Program Member Job Status",
                "description": "Returns status of an export job.  Job status is available for 30 days after Completed or Failed status was reached. Required Permissions: Read-Only Lead",
                "operationId": "getExportProgramMembersStatusUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "exportId",
                        "in": "path",
                        "description": "Id of export batch job.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfExportResponse"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities.json": {
            "get": {
                "tags": ["Activities"],
                "summary": "Get Lead Activities",
                "description": "Returns a list of activities from after a datetime given by the nextPageToken parameter.  Also allows for filtering by lead static list membership, or by a list of up to 30 lead ids.  Required Permissions: Read-Only Activity, Read-Write Activity",
                "operationId": "getLeadActivitiesUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "Token representation of a datetime returned by the Get Paging Token endpoint.  This endpoint will return activities after this datetime",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "activityTypeIds",
                        "in": "query",
                        "description": "Comma-separated list of activity type ids. These can be retrieved with the Get Activity Types API.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "assetIds",
                        "in": "query",
                        "description": "Id of the primary asset for an activity.  This is based on the primary asset id of a given activity type.  Should only be used when a single activity type is set",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "listId",
                        "in": "query",
                        "description": "Id of a static list.  If set, will only return activities of members of this static list.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "leadIds",
                        "in": "query",
                        "description": "Comma-separated list of lead ids.  If set, will only return activities of the leads with these ids.  Allows up to 30 entries.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "Maximum number of records to return.  Maximum and default is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfActivity"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/deletedleads.json": {
            "get": {
                "tags": ["Activities"],
                "summary": "Get Deleted Leads",
                "description": "Returns a list of leads deleted after a given datetime.  Deletions greater than 14 days old may be pruned.  Required Permissions: Read-Only Activity, Read-Write Activity",
                "operationId": "getDeletedLeadsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "Token representation of a datetime returned by the Get Paging Token endpoint.  This endpoint will return activities after this datetime",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "Maximum number of records to return.  Maximum and default is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfActivity"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/external.json": {
            "post": {
                "tags": ["Activities"],
                "summary": "Add Custom Activities",
                "description": "Allows insertion of custom activities associated to given lead records.  Requires provisioning of custom activity types to utilize.  Required Permissions: Read-Write Activity",
                "operationId": "addCustomActivityUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "customActivityRequest",
                        "description": "customActivityRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomActivityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomActivity"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/external/type.json": {
            "post": {
                "tags": ["Activities"],
                "summary": "Create Custom Activity Type",
                "description": "Creates a new custom activity type draft in the target instance.  Required Permissions: Read-Write Activity Metadata",
                "operationId": "createCustomActivityTypeUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "customActivityTypeRequest",
                        "description": "customActivityTypeRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomActivityTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomActivityType"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/external/type/{apiName}.json": {
            "post": {
                "tags": ["Activities"],
                "summary": "Update Custom Activity Type",
                "description": "Updates the target custom activity type.  All changes are applied to the draft version of the type.  Required Permissions: Read-Write Activity Metadata",
                "operationId": "updateCustomActivityTypeUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the activity type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "customActivityTypeRequest",
                        "description": "customActivityTypeRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomActivityTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomActivityType"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/external/type/{apiName}/approve.json": {
            "post": {
                "tags": ["Activities"],
                "summary": "Approve Custom Activity Type",
                "description": "Approves the current draft of the type, and makes it the live version.  This will delete the current live version of the type.  Required Permissions: Read-Write Activity Metadata",
                "operationId": "approveCustomActivityTypeUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the activity type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomActivityType"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/external/type/{apiName}/attributes/create.json": {
            "post": {
                "tags": ["Activities"],
                "summary": "Create Custom Activity Type Attributes",
                "description": "Adds activity attributes to the target type.  These are added to the draft version of the type.  Required Permissions: Read-Write Activity Metadata",
                "operationId": "createCustomActivityTypeAttributesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the activity type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "customActivityTypeAttributeRequest",
                        "description": "customActivityTypeAttributeRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomActivityTypeAttributeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomActivityType"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/external/type/{apiName}/attributes/delete.json": {
            "post": {
                "tags": ["Activities"],
                "summary": "Delete Custom Activity Type Attributes",
                "description": "Deletes the target attributes from the custom activity type draft.  The apiName of each attribute is the primary key for the update.  Required Permissions: Read-Write Activity Metadata",
                "operationId": "deleteCustomActivityTypeAttributesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the activity type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "customActivityTypeAttributeRequest",
                        "description": "customActivityTypeAttributeRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomActivityTypeAttributeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomActivityType"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/external/type/{apiName}/attributes/update.json": {
            "post": {
                "tags": ["Activities"],
                "summary": "Update Custom Activity Type Attributes",
                "description": "Updates the attributes of the custom activity type draft.  The apiName of each attribute is the primary key for the update.  Required Permissions: Read-Write Activity Metadata",
                "operationId": "updateCustomActivityTypeAttributesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the activity type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "customActivityTypeAttributeRequest",
                        "description": "customActivityTypeAttributeRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomActivityTypeAttributeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomActivityType"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/external/type/{apiName}/delete.json": {
            "post": {
                "tags": ["Activities"],
                "summary": "Delete Custom Activity Type",
                "description": "Deletes the target custom activity type.  The type must first be removed from use by any assets, such as triggers or filters.  Required Permissions: Read-Write Activity Metadata",
                "operationId": "deleteCustomActivityTypeUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the activity type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomActivityType"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/external/type/{apiName}/describe.json": {
            "get": {
                "tags": ["Activities"],
                "summary": "Describe Custom Activity Type",
                "description": "Returns metadata for a specific custom activity type.  Required Permissions: Read-Only Activity Metadata, Read-Write Activity Metadata",
                "operationId": "describeCustomActivityTypeUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the activity type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "draft",
                        "in": "query",
                        "description": "draft",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomActivityType"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/external/type/{apiName}/discardDraft.json": {
            "post": {
                "tags": ["Activities"],
                "summary": "Discard Custom Activity Type Draft",
                "description": "Discards the current draft of the custom activity type.  Required Permissions: Read-Write Activity Metadata",
                "operationId": "discardDraftofCustomActivityTypeUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the activity type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomActivityType"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/external/types.json": {
            "get": {
                "tags": ["Activities"],
                "summary": "Get Custom Activity Types",
                "description": "Returns metadata regarding custom activities provisioned in the target instance.  Required Permissions: Read-Only Activity Metadata, Read-Write Activity Metadata",
                "operationId": "getCustomActivityTypeUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomActivityType"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/leadchanges.json": {
            "get": {
                "tags": ["Activities"],
                "summary": "Get Lead Changes",
                "description": "Returns a list of Data Value Changes and New Lead activities after a given datetime. Required Permissions: Read-Only Activity, Read-Write Activity",
                "operationId": "getLeadChangesUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "Token representation of a datetime returned by the Get Paging Token endpoint.  This endpoint will return activities after this datetime",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated list of field names to return changes for.  Field names can be retrieved with the Describe Lead API.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "listId",
                        "in": "query",
                        "description": "Id of a static list.  If set, will only return activities of members of this static list.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "leadIds",
                        "in": "query",
                        "description": "Comma-separated list of lead ids.  If set, will only return activities of the leads with these ids.  Allows up to 30 entries.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "Maximum number of records to return.  Maximum and default is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLeadChange"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/pagingtoken.json": {
            "get": {
                "tags": ["Activities"],
                "summary": "Get Paging Token",
                "description": "Returns a paging token for use in retrieving activities and data value changes.  Required Permissions: Read-Only Activity, Read-Write Activity",
                "operationId": "getActivitiesPagingTokenUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "sinceDatetime",
                        "in": "query",
                        "description": "Earliest datetime to retrieve activities from",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfVoid"
                        }
                    }
                }
            }
        },
        "/rest/v1/activities/types.json": {
            "get": {
                "tags": ["Activities"],
                "summary": "Get Activity Types",
                "description": "Returns a list of available activity types in the target instance, along with associated metadata of each type.  Required Permissions: Read-Only Activity, Read-Write Activity",
                "operationId": "getAllActivityTypesUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfActivityType"
                        }
                    }
                }
            }
        },
        "/rest/v1/campaigns.json": {
            "get": {
                "tags": ["Campaigns"],
                "summary": "Get Campaigns",
                "description": "Returns a list of campaign records.  Required Permissions: Read-Only Campaigns, Read-Write Campaigns<br><br><b>Note: This endpoint has been superceded.</b>  Use <a href=\"/rest-api/endpoint-reference/asset-endpoint-reference/#/Smart_Campaigns/getAllSmartCampaignsGET\">Get Smart Campaigns</a> endpoint instead.",
                "operationId": "getCampaignsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Comma-separated list of campaign ids to return records for",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Comma-separated list of names to filter on",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "programName",
                        "in": "query",
                        "description": "Comma-separated list of program names to filter on.  If set, will filter to only campaigns which are children of the designated programs.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "workspaceName",
                        "in": "query",
                        "description": "Comma-separated list of workspace names to filter on.  If set, will only return campaigns in the given workspaces.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "Maximum number of records to return.  Maximum and default is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isTriggerable",
                        "in": "query",
                        "description": "Set to true to return active Campaigns which have a Campaign is Requested trigger and source is Web Service API",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCampaign"
                        }
                    }
                }
            }
        },
        "/rest/v1/campaigns/{campaignId}.json": {
            "get": {
                "tags": ["Campaigns"],
                "summary": "Get Campaign By Id",
                "description": "Returns the record of a campaign by its id.  Required Permissions: Read-Only Campaigns, Read-Write Campaigns<br><br><b>Note: This endpoint has been superceded.</b>  Use <a href=\"/rest-api/endpoint-reference/asset-endpoint-reference/#!/Smart_Campaigns/getSmartCampaignByIdUsingGET\">Get Smart Campaign by Id</a> endpoint instead.",
                "operationId": "getCampaignByIdUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "campaignId",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCampaign"
                        }
                    }
                }
            }
        },
        "/rest/v1/campaigns/{campaignId}/schedule.json": {
            "post": {
                "tags": ["Campaigns"],
                "summary": "Schedule Campaign",
                "description": "Remotely schedules a batch campaign to run at a given time.  My tokens local to the campaign's parent program can be overridden for the run to customize content.  When using the \"cloneToProgramName\" parameter described below, this endpoint is limited to 20 calls per day. Required Permissions: Execute Campaign",
                "operationId": "scheduleCampaignUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "Id of the batch campaign to schedule.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "scheduleCampaignRequest",
                        "description": "scheduleCampaignRequest",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ScheduleCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCampaign"
                        }
                    }
                }
            }
        },
        "/rest/v1/campaigns/{campaignId}/trigger.json": {
            "post": {
                "tags": ["Campaigns"],
                "summary": "Request Campaign",
                "description": "Passes a set of leads to a trigger campaign to run through the campaign's flow.  The designated campaign must have a Campaign is Requested: Web Service API trigger, and must be active.  My tokens local to the campaign's parent program can be overridden for the run to customize content. A maximum of 100 leads are allowed per call. Required Permissions: Execute Campaign",
                "operationId": "triggerCampaignUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The id of the campaign to trigger",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "triggerCampaignRequest",
                        "description": "triggerCampaignRequest",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TriggerCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCampaign"
                        }
                    }
                }
            }
        },
        "/rest/v1/companies.json": {
            "get": {
                "tags": ["Companies"],
                "summary": "Get Companies",
                "description": "Retrieves company records from the destination instance based on the submitted filter.  Required Permissions: Read-Only Company, Read-Write Company",
                "operationId": "getCompaniesUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "filterType",
                        "in": "query",
                        "description": "The company field to filter on.  Searchable fields can be retrieved with the Describe Company call.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filterValues",
                        "in": "query",
                        "description": "Comma-separated list of values to match against",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated list of fields to include in the response",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCompany"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Companies"],
                "summary": "Sync Companies",
                "description": "Allows inserting, updating, or upserting of company records into Marketo. Required Permissions: Read-Write Company",
                "operationId": "syncCompaniesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "syncCompanyRequest",
                        "description": "syncCompanyRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCompany"
                        }
                    }
                }
            }
        },
        "/rest/v1/companies/delete.json": {
            "post": {
                "tags": ["Companies"],
                "summary": "Delete Companies",
                "description": "Deletes the included list of company records from the destination instance.  Required Permissions: Read-Write Company",
                "operationId": "deleteCompaniesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteCompanyRequest",
                        "description": "deleteCompanyRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCompany"
                        }
                    }
                }
            }
        },
        "/rest/v1/companies/describe.json": {
            "get": {
                "tags": ["Companies"],
                "summary": "Describe Companies",
                "description": "Returns metadata about companies and the fields available for interaction via the API.  Required Permissions: Read-Only Company, Read-Write Company",
                "operationId": "describeUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfObjectMetaData"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects.json": {
            "get": {
                "tags": ["Custom Objects"],
                "summary": "List Custom Objects",
                "description": "Returns a list of Custom Object types available in the target instance, along with id and deduplication information for each type.  Required Permissions: Read-Only Custom Object, Read-Write Custom Object",
                "operationId": "listCustomObjectsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "names",
                        "in": "query",
                        "description": "Comma-separated list of names to filter types on",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfObjectMetaData"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/{customObjectName}.json": {
            "get": {
                "tags": ["Custom Objects"],
                "summary": "Get Custom Objects",
                "description": "Retrieves a list of custom objects records based on filter and set of values.  There are two unique types of requests for this endpoint: one is executed normally using a GET with URL parameters, the other is by passing a JSON object in the body of a POST and specifying _method=GET in the querystring.  The latter is used when dedupeFields attribute has more than one field, which is known as a \"compound key\".  Required Permissions: Read-Only Custom Object, Read-Write Custom Object",
                "operationId": "getCustomObjectsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "customObjectName",
                        "in": "path",
                        "description": "Name of custom object type to retrieve records for",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "customObjectLookupRequest",
                        "description": "Optional JSON request for retrieving custom objects with compound keys.  Example:<br><code>{<br>\"filterType\":\"dedupeFields\",<br>\"fields\":[<br>\"marketoGuid\",<br>\"Bedrooms\",<br>\"yearBuilt\"<br>],<br>\"input\":[<br>{<br>\"mlsNum\":\"1962352\",<br>\"houseOwnerId\":\"42645756\"<br>},<br>{<br>\"mlsNum\":\"3962352\",<br>\"houseOwnerId\":\"62645756\"<br>}<br>]<br>}</code><br>",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LookupCustomObjectRequest"
                        }
                    },
                    {
                        "name": "filterType",
                        "in": "query",
                        "description": "Field to filter on. Searchable fields can be retrieved with Describe Custom Object",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filterValues",
                        "in": "query",
                        "description": "Comma-separated list of field values to match against.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated list of fields to return for each record.  If unset marketoGuid, dedupeFields, updatedAt, createdAt will be returned",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObject"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Custom Objects"],
                "summary": "Sync Custom Objects",
                "description": "Inserts, updates, or upserts custom object records to the target instance.  Required Permissions: Read-Write Custom Object",
                "operationId": "syncCustomObjectsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "customObjectName",
                        "in": "path",
                        "description": "customObjectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "syncCustomObjectRequest",
                        "description": "syncCustomObjectRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncCustomObjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObject"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/{customObjectName}/delete.json": {
            "post": {
                "tags": ["Custom Objects"],
                "summary": "Delete Custom Objects",
                "description": "Deletes a given set of custom object records.  Required Permissions: Read-Write Custom Object",
                "operationId": "deleteCustomObjectsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "customObjectName",
                        "in": "path",
                        "description": "customObjectName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "deleteCustomObjectRequest",
                        "description": "deleteCustomObjectRequest",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeleteCustomObjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObject"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/{customObjectName}/describe.json": {
            "get": {
                "tags": ["Custom Objects"],
                "summary": "Describe Custom Objects",
                "description": "Returns metadata regarding a given custom object.  Required Permissions: Read-Only Custom Object, Read-Write Custom Object",
                "operationId": "describeUsingGET_1",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "customObjectName",
                        "in": "path",
                        "description": "customObjectName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfObjectMetaData"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/schema.json": {
            "get": {
                "tags": ["Custom Objects"],
                "summary": "List Custom Object Types",
                "description": "Returns a list of Custom Object Types available in the target instance, along with id, deduplication, relationship, and field information for each type.  Required Permissions: Read-Only Custom Object Type, Read-Write Custom Object Type",
                "operationId": "listCustomObjectTypesUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "names",
                        "in": "query",
                        "description": "Comma-separated list of API names of custom object types to filter on",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned.",
                        "required": false,
                        "type": "string",
                        "enum": ["draft", "approved", "approvedWithDraft"]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfObjectMetaData"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Custom Objects"],
                "summary": "Sync Custom Object Type",
                "description": "Inserts, updates, or upserts custom object type record to the target instance.  Required Permissions: Read-Write Custom Object Type",
                "operationId": "syncCustomObjectTypeUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "syncCustomObjectTypeRequest",
                        "description": "JSON object containing custom object type attributes",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncCustomObjectTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObjectType"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/schema/{apiName}/approve.json": {
            "post": {
                "tags": ["Custom Objects"],
                "summary": "Approve Custom Object Type",
                "description": "Approves the current draft of the type, and makes it the live version.  This will delete the current live version of the type.  Required Permissions: Read-Write Custom Object Type",
                "operationId": "approveCustomObjectTypeUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object type to approve",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObjectType"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/schema/{apiName}/discardDraft.json": {
            "post": {
                "tags": ["Custom Objects"],
                "summary": "Discard Custom Object Type Draft",
                "description": "Discards the current draft of the custom object type.  Required Permissions: Read-Write Custom Object Type",
                "operationId": "discardCustomObjectTypeUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object type draft to discard",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObjectType"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/schema/{apiName}/delete.json": {
            "post": {
                "tags": ["Custom Objects"],
                "summary": "Delete Custom Object Type",
                "description": "Deletes the target custom object type.  The type must first be removed from use by any assets, such as triggers or filters.  Required Permissions: Read-Write Custom Object Type",
                "operationId": "deleteCustomObjectTypeUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API Name of the custom object type to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObjectType"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/schema/{apiName}/describe.json": {
            "get": {
                "tags": ["Custom Objects"],
                "summary": "Describe Custom Object Type",
                "description": "Returns metadata regarding a given custom object type (including relationships and fields).  Required Permissions: Read-Only Custom Object Type, Read-Write Custom Object Type",
                "operationId": "describeCustomObjectTypeUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API name of custom object type to describe",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State of custom object type to filter on.  By default, if an approved version exists, it is returned.  Otherwise, the draft version is returned.",
                        "required": false,
                        "type": "string",
                        "enum": ["draft", "approved", "approvedWithDraft"]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfObjectMetaData"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/schema/{apiName}/addField.json": {
            "post": {
                "tags": ["Custom Objects"],
                "summary": "Add Custom Object Type Fields",
                "description": "Adds fields to custom object type.  Required Permissions: Read-Write Custom Object Type",
                "operationId": "addCustomObjectTypeFieldsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API name of custom object type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "addCustomObjectTypeFieldsRequest",
                        "description": "JSON object containing custom object type fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddCustomObjectTypeFieldsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObjectType"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/schema/{apiName}/deleteField.json": {
            "post": {
                "tags": ["Custom Objects"],
                "summary": "Delete Custom Object Type Fields",
                "description": "Deletes fields from custom object type.  Required Permissions: Read-Write Custom Object Type",
                "operationId": "deleteCustomObjectTypeFieldsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API name of custom object type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "deleteCustomObjectTypeFieldsRequest",
                        "description": "JSON object containing custom object type fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteCustomObjectTypeFieldsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObjectType"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/schema/{apiName}/{fieldApiName}/updateField.json": {
            "post": {
                "tags": ["Custom Objects"],
                "summary": "Update Custom Object Type Field",
                "description": "Updates a field in custom object type.  Required Permissions: Read-Write Custom Object Type",
                "operationId": "updateCustomObjectTypeFieldUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "API name of custom object type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fieldApiName",
                        "in": "path",
                        "description": "API name of custom object type field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "updateCustomObjectTypeFieldRequest",
                        "description": "JSON object containing custom object type fields",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateCustomObjectTypeFieldRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObjectType"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/schema/fieldDataTypes.json": {
            "get": {
                "tags": ["Custom Objects"],
                "summary": "Get Custom Object Type Field Data Types",
                "description": "Returns a list of permissible data types that are assigned to custom object fields.  Required Permissions: Read-Only Custom Object Type, Read-Write Custom Object Type",
                "operationId": "getCustomObjectTypeFieldDataTypesUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObjectTypeFieldDataTypes"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/schema/linkableObjects.json": {
            "get": {
                "tags": ["Custom Objects"],
                "summary": "Get Custom Object Linkable Objects",
                "description": "Returns a list of linkable custom objects and their fields.  Required Permissions: Read-Only Custom Object Type, Read-Write Custom Object Type",
                "operationId": "getCustomObjectTypeLinkableObjectsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfObjectLinkableObject"
                        }
                    }
                }
            }
        },
        "/rest/v1/customobjects/schema/{apiName}/dependentAssets.json": {
            "get": {
                "tags": ["Custom Objects"],
                "summary": "Get Custom Object Dependent Assets",
                "description": "Returns a list of dependent assets for a custom object type, including their in-instance location.  Required Permissions: Read-Only Custom Object Type, Read-Write Custom Object Type",
                "operationId": "getCustomObjectTypeDependentAssetsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "apiName",
                        "in": "path",
                        "description": "REST API name for custom object",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfObjectDependentAssets"
                        }
                    }
                }
            }
        },
        "/rest/v1/lead/{leadId}.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Get Lead by Id",
                "description": "Retrieves a single lead record through its Marketo id.  Required Permissions: Read-Only Lead, Read-Write Lead",
                "operationId": "getLeadByIdUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "leadId",
                        "in": "path",
                        "description": "The Marketo lead id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma separated list of field names. If omitted, the following default fields will be returned: email, updatedAt, createdAt, lastName, firstName, and id.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLead"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Get Leads by Filter Type",
                "description": "Returns a list of up to 300 leads based on a list of values in a particular field.  Required Permissions: Read-Only Lead, Read-Write Lead",
                "operationId": "getLeadsByFilterUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "filterType",
                        "in": "query",
                        "description": "The lead field to filter on.  Any custom field (string, email, or integer types only), and any of the following fields are supported: cookies, email, facebookId, id, leadPartitionId, linkedInId, sfdcAccountId, sfdcContactId, sfdcLeadId, sfdcLeadOwnerId, sfdcOpptyId, twitterId.<br><br>A comprehensive list of fields can be obtained via the <a href=\"http://developers.marketo.com/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Leads/describeUsingGET_6\">Describe Lead2</a> endpoint.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filterValues",
                        "in": "query",
                        "description": "A comma-separated list of values to filter on in the specified fields.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "A comma-separated list of lead fields to return for each record",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLead"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Leads"],
                "summary": "Sync Leads",
                "description": "Syncs a list of leads to the target instance.  Required Permissions: Read-Write Lead",
                "operationId": "syncLeadUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "syncLeadRequest",
                        "description": "syncLeadRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncLeadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLead"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/delete.json": {
            "post": {
                "tags": ["Leads"],
                "summary": "Delete Leads",
                "description": "Delete a list of leads from the destination instance.  Required Permissions: Read-Write Lead",
                "operationId": "deleteLeadsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteLeadRequest",
                        "description": "deleteLeadRequest",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeleteLeadRequest"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Parameter can be specified if the request body is empty. Multiple lead ids can be specified. e.g. id=1,2,3,2342",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLead"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/describe.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Describe Lead",
                "description": "Returns metadata about lead objects in the target instance, including a list of all fields available for interaction via the APIs.  Required Permissions: Read-Only Lead, Read-Write Lead<br><br><b>Note: This endpoint has been superceded.</b>  Use <a href=\"/rest-api/endpoint-reference/lead-database-endpoint-reference/#!/Leads/describeUsingGET_6\">Describe Lead2</a> endpoint instead.",
                "operationId": "describeUsingGET_2",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLeadAttribute"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/describe2.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Describe Lead2",
                "description": "Returns list of searchable fields on lead objects in the target instance.  Required Permissions: Read-Only Lead, Read-Write Lead",
                "operationId": "describeUsingGET_6",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLeadAttribute2"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/schema/fields/{fieldApiName}.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Get Lead Field by Name",
                "description": "Retrieves metadata for single lead field.  Required Permissions: Read-Write Schema Standard Field, Read-Write Schema Custom Field",
                "operationId": "getLeadFieldByNameUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "fieldApiName",
                        "in": "path",
                        "description": "The API name of lead field",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLeadField"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Leads"],
                "summary": "Update Lead Field",
                "description": "Update metadata for a lead field in the target instance.  See update rules <a href=\"https://developers.marketo.com/rest-api/lead-database/leads/#update_field\">here</a>.  Required Permissions: Read-Write Schema Standard Field, Read-Write Schema Custom Field",
                "operationId": "updateLeadFieldUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "fieldApiName",
                        "in": "path",
                        "description": "The API name of lead field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "updateLeadFieldRequest",
                        "description": "updateLeadFieldRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateLeadFieldRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfUpdateLeadField"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/schema/fields.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Get Lead Fields",
                "description": "Retrieves metadata for all lead fields in the target instance.  Required Permissions: Read-Write Schema Standard Field, Read-Write Schema Custom Field",
                "operationId": "getLeadFieldsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return. The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter. See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLeadField"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Leads"],
                "summary": "Create Lead Fields",
                "description": "Create lead fields in the target instance.  Required Permissions: Read-Write Schema Custom Field",
                "operationId": "createLeadFieldUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createLeadFieldRequest",
                        "description": "createLeadFieldRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateLeadFieldRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCreateLeadField"
                        }
                    }
                }
            }
        },
        "/rest/v1/program/members/describe.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Describe Program Member",
                "description": "Returns metadata about program member objects in the target instance, including a list of all fields available for interaction via the APIs.  Required Permissions: Read-Only Lead, Read-Write Lead<br><br><b>Note: This endpoint has been superceded.</b>  Use <a href=\"/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Leads/describeProgramMemberUsingGET2\">Describe Program Member</a> endpoint instead.",
                "operationId": "describeProgramMemberUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfProgramMemberAttributes"
                        }
                    }
                }
            }
        },
        "/rest/v1/programs/{programId}/members/status.json": {
            "post": {
                "tags": ["Program Members"],
                "summary": "Sync Program Member Status",
                "description": "Changes the program member status of a list of leads in a target program.  If member is not part of the program, member is added to the program.  Required Permissions: Read-Write Lead",
                "operationId": "syncProgramMemberStatusUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "The id of target program.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "syncProgramMemberStatusRequest",
                        "description": "syncProgramMemberStatusRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncProgramMemberStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfProgramMemberStatus"
                        }
                    }
                }
            }
        },
        "/rest/v1/programs/{programId}/members.json": {
            "get": {
                "tags": ["Program Members"],
                "summary": "Get Program Members",
                "description": "Returns a list of up to 300 program members on a list of values in a particular field.  If you specify a filterType that is a custom field, the custom field’s dataType must be either “string” or “integer”.  If you specify a filterType other than “leadId”, a maximum of 100,000 program member records can be processed by the request.  Required Permissions: Read-Only Lead, Read-Write Lead",
                "operationId": "getProgramMembersUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "The id of target program.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filterType",
                        "in": "query",
                        "description": "The program member field to filter on.  Any custom field (string or integer types only) or any searchable field.  Searchable fields can be obtained via the <a href=\"/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Leads/describeProgramMemberUsingGET2\">Describe Program Member</a> endpoint.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filterValues",
                        "in": "query",
                        "description": "A comma-separated list of values to filter on in the specified fields.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "A comma-separated list of lead fields to return for each record.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfProgramMember"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Program Members"],
                "summary": "Sync Program Member Data",
                "description": "Changes the program member data of a list of leads in a target program. Only existing members of the program may have their data changed with this API. Required Permissions: Read-Write Lead",
                "operationId": "syncProgramMemberDataUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "The id of target program.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "syncProgramMemberDataRequest",
                        "description": "syncProgramMemberDataRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncProgramMemberDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfProgramMemberData"
                        }
                    }
                }
            }
        },
        "/rest/v1/programs/{programId}/members/delete.json": {
            "post": {
                "tags": ["Program Members"],
                "summary": "Delete Program Members",
                "description": "Delete a list of members from the destination instance.  Required Permissions: Read-Write Lead",
                "operationId": "deleteProgramMemberUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "The id of target program.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "deleteProgramMemberRequest",
                        "description": "deleteProgramMemberRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteProgramMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfProgramMemberDelete"
                        }
                    }
                }
            }
        },
        "/rest/v1/programs/members/describe.json": {
            "get": {
                "tags": ["Program Members"],
                "summary": "Describe Program Member",
                "description": "Returns metadata about program member objects in the target instance, including a list of all fields available for interaction via the APIs.  Required Permissions: Read-Only Lead, Read-Write Lead",
                "operationId": "describeProgramMemberUsingGET2",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfProgramMemberAttributes2"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/partitions.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Get Lead Partitions",
                "description": "Returns a list of available partitions in the target instance.  Required Permissions: Read-Only Lead, Read-Write Lead",
                "operationId": "getLeadPartitionsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLeadPartition"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Leads"],
                "summary": "Update Lead Partition",
                "description": "Updates the lead partition for a list of leads.  Required Permissions: Read-Write Lead",
                "operationId": "updatePartitionsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateLeadPartitionRequest",
                        "description": "updateLeadPartitionRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateLeadPartitionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLead"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/programs/{programId}.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Get Leads by Program Id",
                "description": "Retrieves a list of leads which are members of the designated program.  Required Permissions: Read-Only Lead, Read-Write Lead",
                "operationId": "getLeadsByProgramIdUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "The id of the program to retrieve from",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "A comma-separated list of fields to be returned for each record",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLead"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/programs/{programId}/status.json": {
            "post": {
                "tags": ["Leads"],
                "summary": "Change Lead Program Status",
                "description": "Changes the program status of a list of leads in a target program.  Only existing members of the program may have their status changed with this API.  Required Permissions: Read-Write Lead<br><br><b>Note: This endpoint has been superceded.</b>  Use <a href=\"/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Program_Members/syncProgramMemberStatusUsingPOST\">Sync Program Member Status</a> endpoint instead.",
                "operationId": "changeLeadProgramStatusUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "The id of target program",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "changeLeadProgramStatusRequest",
                        "description": "changeLeadProgramStatusRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeLeadProgramStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfChangeLeadProgramStatusOutputData"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/push.json": {
            "post": {
                "tags": ["Leads"],
                "summary": "Push Lead to Marketo",
                "description": "Upserts a lead and generates a Push Lead to Marketo activity.  Required Permissions: Read-Write Lead",
                "operationId": "pushToMarketoUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pushLeadToMarketoRequest",
                        "description": "pushLeadToMarketoRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PushLeadToMarketoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfPushLeadToMarketo"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/submitForm.json": {
            "post": {
                "tags": ["Leads"],
                "summary": "Submit Form",
                "description": "Upserts a lead and generates a \"Fill out Form\" activity which is associated back to program and/or campaign.  Required Permissions: Read-Write Lead",
                "operationId": "SubmitFormUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "submitFormRequest",
                        "description": "submitFormRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubmitFormRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfSubmitForm"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/{leadId}/associate.json": {
            "post": {
                "tags": ["Leads"],
                "summary": "Associate Lead",
                "description": "Associates a known Marketo lead record to a munchkin cookie and its associated web acitvity history.  Required Permissions: Read-Write Lead",
                "operationId": "associateLeadUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "leadId",
                        "in": "path",
                        "description": "The id of the lead to associate",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "cookie",
                        "in": "query",
                        "description": "The cookie value to associate",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseWithoutResult"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/{leadId}/merge.json": {
            "post": {
                "tags": ["Leads"],
                "summary": "Merge Leads",
                "description": "Merges two or more known lead records into a single lead record.  Required Permissions: Read-Write Lead",
                "operationId": "mergeLeadsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "leadId",
                        "in": "path",
                        "description": "The id of the winning lead record",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "leadId",
                        "in": "query",
                        "description": "The id of the losing record",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "leadIds",
                        "in": "query",
                        "description": "A comma-separated list of ids of losing records",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "mergeInCRM",
                        "in": "query",
                        "description": "If set, will attempt to merge the designated records in a natively-synched CRM.  Only valid for instances with are natively synched to SFDC.",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseWithoutResult"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/{leadId}/listMembership.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Get Lists by Lead Id",
                "description": "Query static list membership for one lead.  Required Permissions: Read-Only Asset",
                "operationId": "getListMembershipUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "leadId",
                        "in": "path",
                        "description": "The Marketo lead id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "Maximum number of records to return.  Maximum and default is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLists"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/{leadId}/programMembership.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Get Programs by Lead Id",
                "description": "Query program membership for one lead.  Required Permissions: Read-Only Asset",
                "operationId": "getProgramMembershipUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "leadId",
                        "in": "path",
                        "description": "The Marketo lead id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "Maximum number of records to return.  Maximum and default is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "earliestUpdatedAt",
                        "in": "query",
                        "description": "Exclude programs prior to this date. Must be valid ISO-8601 string.  See <a href=\"http://developers.marketo.com/rest-api/lead-database/fields/field-types/\">Datetime</a> field type description.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "latestUpdatedAt",
                        "in": "query",
                        "description": "Exclude programs after this date. Must be valid ISO-8601 string.  See <a href=\"http://developers.marketo.com/rest-api/lead-database/fields/field-types/\">Datetime</a> field type description.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filterType",
                        "in": "query",
                        "description": "Set to \"programId\" to filter a set of programs.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filterValues",
                        "in": "query",
                        "description": "Comma-separated list of program ids to match against",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfPrograms"
                        }
                    }
                }
            }
        },
        "/rest/v1/leads/{leadId}/smartCampaignMembership.json": {
            "get": {
                "tags": ["Leads"],
                "summary": "Get Smart Campaigns by Lead Id",
                "description": "Query smart campaign membership for one lead.  Required Permissions: Read-Only Asset",
                "operationId": "getSmartCampaignMembershipUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "leadId",
                        "in": "path",
                        "description": "The Marketo lead id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "Maximum number of records to return.  Maximum and default is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "earliestUpdatedAt",
                        "in": "query",
                        "description": "Exclude smart campaigns prior to this date. Must be valid ISO-8601 string.  See <a href=\"http://developers.marketo.com/rest-api/lead-database/fields/field-types/\">Datetime</a> field type description.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "latestUpdatedAt",
                        "in": "query",
                        "description": "Exclude smart campaigns after this date. Must be valid ISO-8601 string.  See <a href=\"http://developers.marketo.com/rest-api/lead-database/fields/field-types/\">Datetime</a> field type description.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfSmartCampaigns"
                        }
                    }
                }
            }
        },
        "/rest/v1/list/{listId}/leads.json": {
            "get": {
                "tags": ["Static Lists"],
                "summary": "Get Leads By List Id",
                "description": "Retrieves person records which are members of the given static list.  Required Permissions: Read-Only Lead, Read-Write Lead",
                "operationId": "getLeadsByListIdUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "Id of the static list to retrieve records from",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated list of lead fields to return for each record.  If unset will return email, updatedAt, createdAt, lastName, firstName and id",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLead"
                        }
                    }
                }
            }
        },
        "/rest/v1/lists.json": {
            "get": {
                "tags": ["Static Lists"],
                "summary": "Get Lists",
                "description": "Returns a set of static list records based on given filter parameters. Required Permissions: Read-Only Lead, Read-Write Lead",
                "operationId": "getListsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Comma-separated list of static list ids to return",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Comma-separated list of static list names to return",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "programName",
                        "in": "query",
                        "description": "Comma-separated list of program names.  If set will return all static lists that are children of the given programs",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "workspaceName",
                        "in": "query",
                        "description": "Comma-separated list of workspace names.  If set will return all static lists that are children of the given workspaces",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfStaticList"
                        }
                    }
                }
            }
        },
        "/rest/v1/lists/{listId}.json": {
            "get": {
                "tags": ["Static Lists"],
                "summary": "Get List by Id",
                "description": "Returns a list record by its id.  Required Permissions: Read-Only Lead, Read-Write Lead",
                "operationId": "getListByIdUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "Id of the static list to retrieve records from",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfStaticList"
                        }
                    }
                }
            }
        },
        "/rest/v1/lists/{listId}/leads.json": {
            "get": {
                "tags": ["Static Lists"],
                "summary": "Get Leads By List Id",
                "description": "Retrieves person records which are members of the given static list.  Required Permissions: Read-Only Lead, Read-Write Lead",
                "operationId": "getLeadsByListIdUsingGET_1",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "Id of the static list to retrieve records from",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated list of lead fields to return for each record.  If unset will return email, updatedAt, createdAt, lastName, firstName and id",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfLead"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Static Lists"],
                "summary": "Add to List",
                "description": "Adds a given set of person records to a target static list.  There is a limit of 300 lead ids per request.  Required Permissions: Read-Write Lead",
                "operationId": "addLeadsToListUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "Id of target list",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "listOperationRequest",
                        "description": "Optional JSON request body for submitting leads",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ListOperationRequest"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Comma-separated list of lead ids to add to the list",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfListOperationOutputData"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Static Lists"],
                "summary": "Remove from List",
                "description": "Removes a given set of person records from a target static list.  Required Permissions: Read-Write Lead",
                "operationId": "removeLeadsFromListUsingDELETE",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "Id of static list to remove leads from",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "listOperationRequest",
                        "description": "listOperationRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListOperationRequest"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfListOperationOutputData"
                        }
                    }
                }
            }
        },
        "/rest/v1/lists/{listId}/leads/ismember.json": {
            "get": {
                "tags": ["Static Lists"],
                "summary": "Member of List",
                "description": "Checks if leads are members of a given static list.  Required Permissions: Read-Write Lead",
                "operationId": "areLeadsMemberOfListUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "Id of the static list to check against",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "listOperationRequest",
                        "description": "Optional JSON request body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ListOperationRequest"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Comma-separated list of lead ids to check",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfListOperationOutputData"
                        }
                    }
                }
            }
        },
        "/rest/v1/namedAccountList/{id}/namedAccounts.json": {
            "get": {
                "tags": ["Named Account Lists"],
                "summary": "Get Named Account List Members",
                "description": "Retrieves the named accounts which are members of the given list.  Required Permissions: Read-Only Named Account, Read-Write Named Account",
                "operationId": "getNamedAccountListMembersUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the named account list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated list of fields to include in the response",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfNamedAccount"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Named Account Lists"],
                "summary": "Add Named Account List Members",
                "description": "Adds named account records to a named account list.  Required Permissions: Read-Write Named Account",
                "operationId": "addNamedAccountListMembersUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of target named account list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "addNamedAccountListMemberRequest",
                        "description": "addNamedAccountListMemberRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddNamedAccountListMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfNamedAccount"
                        }
                    }
                }
            }
        },
        "/rest/v1/namedAccountList/{id}/namedAccounts/remove.json": {
            "post": {
                "tags": ["Named Account Lists"],
                "summary": "Remove Named Account List Members",
                "description": "Removes named account members from a named account list.  Required Permissions: Read-Write Named Account",
                "operationId": "removeNamedAccountListMembersUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of target named account list",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "removeNamedAccountListMemberRequest",
                        "description": "removeNamedAccountListMemberRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RemoveNamedAccountListMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfNamedAccount"
                        }
                    }
                }
            }
        },
        "/rest/v1/namedAccountLists.json": {
            "get": {
                "tags": ["Named Account Lists"],
                "summary": "Get Named Account Lists",
                "description": "Retrieves a list of named account list records based on the filter type and values given.  Required Permissions: Read-Only Named Account List, Read-Write Named Account List",
                "operationId": "getNamedAccountListsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "filterType",
                        "in": "query",
                        "description": "The named account list field to filter on (\"dedupeFields\" or \"idFields\").",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filterValues",
                        "in": "query",
                        "description": "Comma-separated list of values to match against",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfNamedAccountList"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Named Account Lists"],
                "summary": "Sync Named Account Lists",
                "description": "Creates and/or updates named account list records.  Required Permissions: Read-Write Named Account List",
                "operationId": "syncNamedAccountListsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "syncNamedAccountListRequest",
                        "description": "syncNamedAccountListRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncNamedAccountListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfNamedAccountList"
                        }
                    }
                }
            }
        },
        "/rest/v1/namedAccountLists/delete.json": {
            "post": {
                "tags": ["Named Account Lists"],
                "summary": "Delete Named Account Lists",
                "description": "Delete named account lists by dedupe fields, or by id field.  Required Permissions: Read-Write Named Account List",
                "operationId": "deleteNamedAccountListsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteNamedAccountListRequest",
                        "description": "deleteNamedAccountListRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteNamedAccountListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfNamedAccountList"
                        }
                    }
                }
            }
        },
        "/rest/v1/namedaccounts.json": {
            "get": {
                "tags": ["Named Accounts"],
                "summary": "Get NamedAccounts",
                "description": "Retrieves namedaccount records from the destination instance based on the submitted filter.  Required Permissions: Read-Only Named Account, Read-Write Named Account",
                "operationId": "getNamedAccountsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "filterType",
                        "in": "query",
                        "description": "NamedAccounts field to filter on.  Can be any searchable fields",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filterValues",
                        "in": "query",
                        "description": "A comma-separated list of values to match against",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated list of fields to include in the response",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfNamedAccount"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Named Accounts"],
                "summary": "Sync NamedAccounts",
                "description": "Allows inserts, updates, or upserts of namedaccounts to the target instance.  Required Permissions: Read-Write Named Account",
                "operationId": "syncNamedAccountsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "syncAccountRequest",
                        "description": "syncAccountRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncNamedAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfNamedAccount"
                        }
                    }
                }
            }
        },
        "/rest/v1/namedaccounts/delete.json": {
            "post": {
                "tags": ["Named Accounts"],
                "summary": "Delete NamedAccounts",
                "description": "Deletes a list of namedaccount records from the target instance.  Input records should have only one member, based on the value of 'dedupeBy'.  Required Permissions: Read-Write Named Account",
                "operationId": "deleteNamedAccountsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteAccountRequest",
                        "description": "deleteAccountRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteNamedAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfNamedAccount"
                        }
                    }
                }
            }
        },
        "/rest/v1/namedaccounts/describe.json": {
            "get": {
                "tags": ["Named Accounts"],
                "summary": "Describe NamedAccounts",
                "description": "Returns metadata about namedaccounts and the fields available for interaction via the API.  Required Permissions: Read-Only Named Account, Read-Write Named Account",
                "operationId": "describeUsingGET_3",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfObjectMetaData"
                        }
                    }
                }
            }
        },
        "/rest/v1/opportunities.json": {
            "get": {
                "tags": ["Opportunities"],
                "summary": "Get Opportunities",
                "description": "Returns a list of opportunities based on a filter and set of values.  Required Permissions: Read-Only Opportunity, Read-Write Named Opportunity",
                "operationId": "getOpportunitiesUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "customObjectLookupRequest",
                        "description": "customObjectLookupRequest",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LookupCustomObjectRequest"
                        }
                    },
                    {
                        "name": "filterType",
                        "in": "query",
                        "description": "Opportunities field to filter on",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filterValues",
                        "in": "query",
                        "description": "Comma-separated list of values to match against",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated list of fields to include in the response",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "Maximum number of records to return in the response.  Max and default is 300",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "Paging token returned from a previous response",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObject"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Opportunities"],
                "summary": "Sync Opportunities",
                "description": "Allows inserting, updating, or upserting of opportunity records into the target instance.  Required Permissions: Read-Write Named Opportunity",
                "operationId": "syncOpportunitiesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "syncCustomObjectRequest",
                        "description": "syncCustomObjectRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncCustomObjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObject"
                        }
                    }
                }
            }
        },
        "/rest/v1/opportunities/delete.json": {
            "post": {
                "tags": ["Opportunities"],
                "summary": "Delete Opportunities",
                "description": "Deletes a list of opportunity records from the target instance.  Input records should only have one member, based on the value of 'dedupeBy'.  Required Permissions: Read-Write Named Opportunity",
                "operationId": "deleteOpportunitiesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteCustomObjectRequest",
                        "description": "deleteCustomObjectRequest",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeleteCustomObjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObject"
                        }
                    }
                }
            }
        },
        "/rest/v1/opportunities/describe.json": {
            "get": {
                "tags": ["Opportunities"],
                "summary": "Describe Opportunity",
                "description": "Returns object and field metadata for Opportunity type records in the target instance.  Required Permissions: Read-Only Opportunity, Read-Write Named Opportunity",
                "operationId": "describeUsingGET_4",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfObjectMetaData"
                        }
                    }
                }
            }
        },
        "/rest/v1/opportunities/roles.json": {
            "get": {
                "tags": ["Opportunities"],
                "summary": "Get Opportunity Roles",
                "description": "Returns a list of opportunity roles based on a filter and set of values.  Required Permissions: Read-Only Opportunity, Read-Write Named Opportunity",
                "operationId": "getOpportunityRolesUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "customObjectLookupRequest",
                        "description": "Optional JSON request for retrieving opportunity roles with compound keys",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LookupCustomObjectRequest"
                        }
                    },
                    {
                        "name": "filterType",
                        "in": "query",
                        "description": "The role field to filter on.  Searchable fields can be retrieved with the Describe Opportunity call.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filterValues",
                        "in": "query",
                        "description": "Comma-separated list of field values to return records for",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated list of fields to include in the response",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "Maximum number of records to return in the response.  Max and default is 300",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "Paging token returned from a previous response",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObject"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Opportunities"],
                "summary": "Sync Opportunity Roles",
                "description": "Allows inserts, updates and upserts of Opportunity Role records in the target instance.  Required Permissions: Read-Write Named Opportunity",
                "operationId": "syncOpportunityRolesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "syncCustomObjectRequest",
                        "description": "syncCustomObjectRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncCustomObjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObject"
                        }
                    }
                }
            }
        },
        "/rest/v1/opportunities/roles/delete.json": {
            "post": {
                "tags": ["Opportunities"],
                "summary": "Delete Opportunity Roles",
                "description": "Deletes a list of opportunities from the target instance.  Required Permissions: Read-Write Named Opportunity",
                "operationId": "deleteOpportunityRolesUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteCustomObjectRequest",
                        "description": "deleteCustomObjectRequest",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeleteCustomObjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfCustomObject"
                        }
                    }
                }
            }
        },
        "/rest/v1/opportunities/roles/describe.json": {
            "get": {
                "tags": ["Opportunities"],
                "summary": "Describe Opportunity Role",
                "description": "Returns object and field metadata for Opportunity Roles in the target instance.  Required Permissions: Read-Only Opportunity, Read-Write Named Opportunity",
                "operationId": "describeOpportunityRoleUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfObjectMetaData"
                        }
                    }
                }
            }
        },
        "/rest/v1/salespersons.json": {
            "get": {
                "tags": ["Sales Persons"],
                "summary": "Get SalesPersons",
                "description": "Retrieves salesperson records from the destination instance based on the submitted filter.  Required Permissions: Read-Only Sales Person, Read-Write Sales Person",
                "operationId": "getSalesPersonUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filterType",
                        "description": "The sales person field to filter on. Searchable fields can be retrieved with the Describe Sales Person call.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filterValues",
                        "description": "Comma seperated list of search values.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated list of fields to include in the response",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "batchSize",
                        "in": "query",
                        "description": "The batch size to return.  The max and default value is 300.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "nextPageToken",
                        "in": "query",
                        "description": "A token will be returned by this endpoint if the result set is greater than the batch size and can be passed in a subsequent call through this parameter.  See Paging Tokens for more info.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfSalesPerson"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Sales Persons"],
                "summary": "Sync SalesPersons",
                "description": "Allows inserts, updates, or upserts of salespersons to the target instance.  Required Permissions: Read-Write Sales Person",
                "operationId": "syncSalesPersonsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "syncSalesPersonRequest",
                        "description": "syncSalesPersonRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SyncSalesPersonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfSalesPerson"
                        }
                    }
                }
            }
        },
        "/rest/v1/salespersons/delete.json": {
            "post": {
                "tags": ["Sales Persons"],
                "summary": "Delete SalesPersons",
                "description": "Deletes a list of salesperson records from the target instance.  Input records should have only one member, based on the value of 'dedupeBy'.  Required Permissions: Read-Write Sales Person",
                "operationId": "deleteSalesPersonUsingPOST",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteSalesPersonRequest",
                        "description": "deleteSalesPersonRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteSalesPersonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfSalesPerson"
                        }
                    }
                }
            }
        },
        "/rest/v1/salespersons/describe.json": {
            "get": {
                "tags": ["Sales Persons"],
                "summary": "Describe SalesPersons",
                "description": "Returns metadata about salespersons and the fields available for interaction via the API.  Required Permissions: Read-Only Sales Person, Read-Write Sales Person",
                "operationId": "describeUsingGET_5",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfObjectMetaData"
                        }
                    }
                }
            }
        },
        "/rest/v1/stats/errors.json": {
            "get": {
                "tags": ["Usage"],
                "summary": "Get Daily Errors",
                "description": "Retrieves a count of each error type they have encountered in the current day.  Required Permissions: None",
                "operationId": "getDailyErrorsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfErrorsData"
                        }
                    }
                }
            }
        },
        "/rest/v1/stats/errors/last7days.json": {
            "get": {
                "tags": ["Usage"],
                "summary": "Get Weekly Errors",
                "description": "Returns a count of each error type they have encountered in the past 7 days.  Required Permissions: None",
                "operationId": "getLast7DaysErrorsUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfErrorsData"
                        }
                    }
                }
            }
        },
        "/rest/v1/stats/usage.json": {
            "get": {
                "tags": ["Usage"],
                "summary": "Get Daily Usage",
                "description": "Returns the number of calls consumed for the day.  Required Permissions: None",
                "operationId": "getDailyUsageUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfUsageData"
                        }
                    }
                }
            }
        },
        "/rest/v1/stats/usage/last7days.json": {
            "get": {
                "tags": ["Usage"],
                "summary": "Get Weekly Usage",
                "description": "Returns the number of calls consumed in the past 7 days.  Required Permissions: None",
                "operationId": "getLast7DaysUsageUsingGET",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseOfUsageData"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ResponseOfActivity": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/Activity"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfLists": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/List"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfPrograms": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/Program"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfSmartCampaigns": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/SmartCampaign"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "LeadInputData": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique integer id of a lead record"
                }
            },
            "description": "Lead record containing only lead id"
        },
        "ResponseOfStaticList": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/StaticList"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfCustomActivityType": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/CustomActivityType"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "LeadChange": {
            "type": "object",
            "required": [
                "activityDate",
                "activityTypeId",
                "attributes",
                "id",
                "leadId"
            ],
            "properties": {
                "activityDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Datetime of the activity"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of the activity type"
                },
                "attributes": {
                    "type": "array",
                    "description": "List of secondary attributes",
                    "items": {
                        "$ref": "#/definitions/Attribute"
                    }
                },
                "campaignId": {
                    "type": "integer",
                    "format": "int64"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LeadChangeField"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Integer id of the activity.  For instances which have been migrated to Activity Service, this field may not be present, and should not be treated as unique."
                },
                "leadId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of the lead associated to the activity"
                },
                "marketoGUID": {
                    "type": "string",
                    "description": "Unique id of the activity (128 character string)"
                }
            }
        },
        "LeadPartition": {
            "type": "object",
            "required": ["id", "name"],
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the partition"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of the partition"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the partition"
                }
            }
        },
        "ActivityType": {
            "type": "object",
            "required": ["attributes", "id", "name", "primaryAttribute"],
            "properties": {
                "apiName": {
                    "type": "string"
                },
                "attributes": {
                    "type": "array",
                    "description": "List of secondary attributes of the type",
                    "items": {
                        "$ref": "#/definitions/ActivityTypeAttribute"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the activity type"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of the activity type"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the activity type"
                },
                "primaryAttribute": {
                    "description": "Primary attribute of the type",
                    "$ref": "#/definitions/ActivityTypeAttribute"
                }
            }
        },
        "ActivityTypeAttribute": {
            "type": "object",
            "required": ["dataType", "name"],
            "properties": {
                "apiName": {
                    "type": "string"
                },
                "dataType": {
                    "type": "string",
                    "description": "Datatype of the Attribute"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the attribute"
                }
            }
        },
        "ResponseWithoutResult": {
            "type": "object",
            "required": ["requestId", "success"],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token returned from a previous response"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "SyncCustomObjectRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Type of sync operation to perform",
                    "enum": ["createOnly", "updateOnly", "createOrUpdate"]
                },
                "dedupeBy": {
                    "type": "string",
                    "description": "Field to deduplicate on.  If the value in the field for a given record is not unique, an error will be returned for the individual record."
                },
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/CustomObject"
                    }
                }
            }
        },
        "SyncProgramMemberStatusRequest": {
            "type": "object",
            "required": ["statusName", "input"],
            "properties": {
                "statusName": {
                    "type": "string",
                    "description": "Program member status"
                },
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/ProgramMemberStatus"
                    }
                }
            }
        },
        "ProgramMemberStatus": {
            "type": "object",
            "required": ["leadId"],
            "properties": {
                "leadId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique integer id of a lead record"
                }
            }
        },
        "SyncProgramMemberDataRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/ProgramMemberData"
                    }
                }
            }
        },
        "ProgramMemberData": {
            "type": "object",
            "required": ["leadId", "{fieldApiName}"],
            "properties": {
                "leadId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique integer id of a lead record"
                },
                "{fieldApiName}": {
                    "type": "string",
                    "description": "API Name of field to update.  Must be updateable as described by <a href=\"/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Leads/describeProgramMemberUsingGET2\">Describe Program Member</a> endpoint."
                },
                "{fieldApiName2}": {
                    "type": "string",
                    "description": "API Name of another field to update (and so forth).  Must be updateable as described by <a href=\"/rest-api/endpoint-reference/lead-database-endpoint-reference/#/Leads/describeProgramMemberUsingGET2\">Describe Program Member</a> endpoint."
                }
            }
        },
        "DeleteProgramMemberRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/ProgramMemberDelete"
                    }
                }
            }
        },
        "ProgramMemberDelete": {
            "type": "object",
            "required": ["leadId"],
            "properties": {
                "leadId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique integer id of a lead record"
                }
            }
        },
        "SyncCustomObjectTypeRequest": {
            "type": "object",
            "required": ["apiName", "displayName"],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Type of sync operation to perform.  Default is createOrUpdate.",
                    "enum": ["createOnly", "updateOnly", "createOrUpdate"]
                },
                "displayName": {
                    "type": "string",
                    "description": "UI display-name of the custom object type"
                },
                "apiName": {
                    "type": "string",
                    "description": "API name of the custom object type"
                },
                "pluralName": {
                    "type": "string",
                    "description": "UI plural-name of the custom object type"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the custom object type"
                },
                "showInLeadDetail": {
                    "type": "boolean",
                    "description": "Whether to show custom object type in lead detail of UI.  Default is false"
                }
            }
        },
        "InputStream": {
            "type": "object"
        },
        "TriggerCampaignRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "description": "Object describing trigger configuration for the campaign",
                    "$ref": "#/definitions/TriggerCampaignData"
                }
            }
        },
        "ResponseOfNamedAccount": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/NamedAccount"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "Lead": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of a lead record"
                },
                "membership": {
                    "description": "Membership data for the parent program.  Only returned via Get Leads By Program Id",
                    "$ref": "#/definitions/ProgramMembership"
                },
                "reason": {
                    "description": "Reason object describing why an operation did not succeed for a record",
                    "$ref": "#/definitions/Reason"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the operation performed on the record"
                }
            },
            "description": "Lead record.  Always contains id, but may have any number of other fields, depending on the fields available in the target instance."
        },
        "LeadField": {
            "type": "object",
            "description": "Lead field record",
            "required": [
                "displayName",
                "name",
                "description",
                "dataType",
                "isHidden",
                "isHtmlEncodingInEmail",
                "isCustom"
            ],
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "UI display-name of the field"
                },
                "name": {
                    "type": "string",
                    "description": "API name of the field"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the field"
                },
                "dataType": {
                    "type": "string",
                    "description": "Datatype of the field"
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Max length of the field.  Only applicable to text, string, and text area."
                },
                "isHidden": {
                    "type": "boolean",
                    "example": false,
                    "description": "If set to true, the field is hidden"
                },
                "isHtmlEncodingInEmail": {
                    "type": "boolean",
                    "example": false,
                    "description": "If set to true, field is encoded as HTML in email"
                },
                "isCustom": {
                    "type": "boolean",
                    "example": false,
                    "description": "If set to true, field is custom"
                }
            }
        },
        "UpdateLeadField": {
            "type": "object",
            "description": "Lead field record for update",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "UI display-name of the field"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the field"
                },
                "isHidden": {
                    "type": "boolean",
                    "example": false,
                    "description": "If set to true, the field is hidden.  Default is false"
                },
                "isHtmlEncodingInEmail": {
                    "type": "boolean",
                    "example": false,
                    "description": "If set to true, field is encoded as HTML in email.  Default is true"
                }
            }
        },
        "CreateLeadField": {
            "type": "object",
            "required": ["displayName", "name", "dataType"],
            "description": "Lead field record for create",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "UI display-name of the field.  Must be unique, cannot contain special characters"
                },
                "name": {
                    "type": "string",
                    "description": "API name of the field.  Must be unique, start with a letter, and only contain letters, numbers, or underscore"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the field.  Default is no description"
                },
                "dataType": {
                    "type": "string",
                    "description": "Datatype of the field",
                    "enum": [
                        "boolean",
                        "currency",
                        "date",
                        "datetime",
                        "email",
                        "float",
                        "integer",
                        "percent",
                        "phone",
                        "score",
                        "string",
                        "url"
                    ]
                },
                "isHidden": {
                    "type": "boolean",
                    "example": false,
                    "description": "If set to true, the field is hidden.  Default is false"
                },
                "isHtmlEncodingInEmail": {
                    "type": "boolean",
                    "example": false,
                    "description": "If set to true, field is encoded as HTML in email.  Default is true"
                }
            }
        },
        "LeadFieldStatus": {
            "type": "object",
            "required": ["name", "status"],
            "description": "Lead field update status",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "API name of the field"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the operation performed on the record",
                    "enum": ["created", "updated"]
                }
            }
        },
        "UpdateLeadFieldRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "Single lead field for input",
                    "items": {
                        "$ref": "#/definitions/UpdateLeadField"
                    }
                }
            }
        },
        "CreateLeadFieldRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of lead fields for input",
                    "items": {
                        "$ref": "#/definitions/CreateLeadField"
                    }
                }
            }
        },
        "SyncLeadRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Type of sync operation to perform.  Defaults to createOrUpdate if unset",
                    "enum": [
                        "createOnly",
                        "updateOnly",
                        "createOrUpdate",
                        "createDuplicate"
                    ]
                },
                "asyncProcessing": {
                    "type": "boolean",
                    "example": false,
                    "description": "If set to true, the call will return immediately"
                },
                "input": {
                    "type": "array",
                    "description": "List of leads for input",
                    "items": {
                        "$ref": "#/definitions/Lead"
                    }
                },
                "lookupField": {
                    "type": "string",
                    "description": "Field to deduplicate on.  The field must be present in each lead record of the input.  Defaults to email if unset"
                },
                "partitionName": {
                    "type": "string",
                    "description": "Name of the partition to operate on, if applicable.  Should be set whenever possible, when interacting with an instance where partitions are enabled."
                }
            }
        },
        "DeleteSalesPersonRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "deleteBy": {
                    "type": "string",
                    "description": "Key to use for deletion of the record"
                },
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/SalesPerson"
                    }
                }
            }
        },
        "ListOperationOutputData": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique integer id of a lead record"
                },
                "reasons": {
                    "type": "array",
                    "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
                    "items": {
                        "$ref": "#/definitions/Reason"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Status of the operation performed on the record"
                }
            }
        },
        "LeadAttribute": {
            "type": "object",
            "required": ["dataType", "displayName", "id"],
            "properties": {
                "dataType": {
                    "type": "string",
                    "description": "Datatype of the field"
                },
                "displayName": {
                    "type": "string",
                    "description": "UI display-name of the field"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of the field"
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Max length of the field.  Only applicable to text, string, and text area."
                },
                "rest": {
                    "description": "Description of REST API usage attributes",
                    "$ref": "#/definitions/LeadMapAttribute"
                },
                "soap": {
                    "description": "Description of SOAP API usage attributes",
                    "$ref": "#/definitions/LeadMapAttribute"
                }
            }
        },
        "LeadAttribute2": {
            "type": "object",
            "required": ["name", "searchableFields", "fields"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\"API Lead\""
                },
                "searchableFields": {
                    "type": "array",
                    "description": "List of searchable fields",
                    "items": {
                        "$ref": "#/definitions/LeadAttribute2SearchableFields"
                    }
                },
                "fields": {
                    "type": "array",
                    "description": "Description of searchable fields",
                    "items": {
                        "$ref": "#/definitions/LeadAttribute2Fields"
                    }
                }
            }
        },
        "LeadAttribute2SearchableFields": {
            "type": "array",
            "description": "List of searchable fields",
            "items": {
                "type": "string",
                "description": "Searchable field"
            }
        },
        "LeadAttribute2Fields": {
            "type": "object",
            "required": [
                "name",
                "displayName",
                "dataType",
                "updateable",
                "crmManaged"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "REST API name of field"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of field (friendly name)"
                },
                "dataType": {
                    "type": "string",
                    "description": "Data type of field"
                },
                "length": {
                    "type": "integer",
                    "description": "Length of field"
                },
                "updateable": {
                    "type": "boolean",
                    "description": "Is field updateable"
                },
                "crmManaged": {
                    "type": "boolean",
                    "description": "Is field managed by CRM"
                }
            }
        },
        "LeadAttribute2Fields2": {
            "type": "object",
            "required": [
                "name",
                "displayName",
                "dataType",
                "updateable",
                "crmManaged"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "REST API name of field"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of field (friendly name)"
                },
                "dataType": {
                    "type": "string",
                    "description": "Data type of field"
                },
                "length": {
                    "type": "integer",
                    "description": "Length of field"
                },
                "updateable": {
                    "type": "boolean",
                    "description": "Is field updateable"
                },
                "crmManaged": {
                    "type": "boolean",
                    "description": "Is field managed by CRM"
                }
            }
        },
        "ProgramMemberAttribute": {
            "type": "object",
            "required": ["fields"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\"API Program Member\""
                },
                "fields": {
                    "type": "array",
                    "description": "Description of searchable fields",
                    "items": {
                        "$ref": "#/definitions/LeadAttribute2Fields"
                    }
                }
            }
        },
        "ProgramMemberAttribute2": {
            "type": "object",
            "required": [
                "name",
                "description",
                "createdAt",
                "updatedAt",
                "dedupeFields",
                "searchableFields",
                "fields"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "\"API Program Member\""
                },
                "description": {
                    "type": "string",
                    "description": "\"API Program Member Map\""
                },
                "createdAt": {
                    "type": "string",
                    "description": "Datetime when created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Datetime updated"
                },
                "dedupeFields": {
                    "type": "array",
                    "description": "List of dedupe fields",
                    "items": {
                        "type": "string"
                    }
                },
                "searchableFields": {
                    "type": "array",
                    "description": "List of searchable fields",
                    "items": {
                        "$ref": "#/definitions/LeadAttribute2SearchableFields"
                    }
                },
                "fields": {
                    "type": "array",
                    "description": "Description of searchable fields",
                    "items": {
                        "$ref": "#/definitions/LeadAttribute2Fields2"
                    }
                }
            }
        },
        "ScheduleCampaignRequest": {
            "type": "object",
            "properties": {
                "input": {
                    "$ref": "#/definitions/ScheduleCampaignData"
                }
            },
            "description": "Record describe how to schedule the campaign"
        },
        "SyncSalesPersonRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Type of sync operation to perform",
                    "enum": ["createOnly", "updateOnly", "createOrUpdate"]
                },
                "dedupeBy": {
                    "type": "string",
                    "description": "Field to deduplicate on.  If the value in the field for a given record is not unique, an error will be returned for the individual record."
                },
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/SalesPerson"
                    }
                }
            }
        },
        "ResponseOfImportLeadResponse": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ImportLeadResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "NamedAccountList": {
            "type": "object",
            "required": ["marketoGUID", "seq"],
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Datetime when the named account list was created"
                },
                "marketoGUID": {
                    "type": "string",
                    "description": "Unique GUID of the custom object records"
                },
                "name": {
                    "type": "string",
                    "description": "Name of named account list"
                },
                "reasons": {
                    "type": "array",
                    "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
                    "items": {
                        "$ref": "#/definitions/Reason"
                    }
                },
                "seq": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "created",
                        "updated",
                        "deleted",
                        "skipped",
                        "added",
                        "removed"
                    ]
                },
                "type": {
                    "type": "string",
                    "description": "Type of named account list (\"default\" if created by user or API, \"external\" if managed by CRM-View)"
                },
                "updateable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the list is updateable (true if created by user or API, false if managed by CRM-View)"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Datetime when the named account list was most recently updated"
                }
            }
        },
        "ExportLeadRequest": {
            "type": "object",
            "required": ["fields", "filter"],
            "properties": {
                "columnHeaderNames": {
                    "description": "File header field names override (corresponds with REST API name)",
                    "$ref": "#/definitions/ColumnHeaderNames"
                },
                "fields": {
                    "type": "array",
                    "description": "Comma-separated list of fields to include in the file",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "description": "Lead record selection criteria. Can be one of the following: \"createdAt\", \"updatedAt\", \"staticListName\", \"staticListId\", \"smartListName\", \"smartListId\"",
                    "$ref": "#/definitions/ExportLeadFilter"
                },
                "format": {
                    "type": "string",
                    "description": "File format to create(\"CSV\", \"TSV\", \"SSV\").  Default is \"CSV\""
                }
            }
        },
        "ExportCustomObjectRequest": {
            "type": "object",
            "required": ["fields", "filter"],
            "properties": {
                "columnHeaderNames": {
                    "description": "File header field names override (corresponds with REST API name)",
                    "$ref": "#/definitions/ColumnHeaderNames"
                },
                "fields": {
                    "type": "array",
                    "description": "Comma-separated list of custom object attributes to include in the file",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "description": "Custom object record selection criteria. Can be one of the following: \"staticListName\", \"staticListId\", \"smartListName\", \"smartListId\"",
                    "$ref": "#/definitions/ExportCustomObjectFilter"
                },
                "format": {
                    "type": "string",
                    "description": "File format to create(\"CSV\", \"TSV\", \"SSV\").  Default is \"CSV\""
                }
            }
        },
        "ExportProgramMemberRequest": {
            "type": "object",
            "required": ["fields", "filter"],
            "properties": {
                "columnHeaderNames": {
                    "description": "File header field names override (corresponds with REST API name)",
                    "$ref": "#/definitions/ColumnHeaderNames"
                },
                "fields": {
                    "type": "array",
                    "description": "Comma-separated list of fields to include in the file",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "description": "Program member record selection criteria. Must be the following: \"programId\"",
                    "$ref": "#/definitions/ExportProgramMemberFilter"
                },
                "format": {
                    "type": "string",
                    "description": "File format to create(\"CSV\", \"TSV\", \"SSV\").  Default is \"CSV\""
                }
            }
        },
        "CustomActivityRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of custom activities to insert",
                    "items": {
                        "$ref": "#/definitions/CustomActivity"
                    }
                }
            }
        },
        "DeleteLeadRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of leads for input",
                    "items": {
                        "$ref": "#/definitions/LeadInputData"
                    }
                }
            }
        },
        "Attribute": {
            "type": "object",
            "required": ["name", "value"],
            "properties": {
                "apiName": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the attribute"
                },
                "value": {
                    "type": "object",
                    "description": "Value of the attribute"
                }
            },
            "description": "Name-Value pair"
        },
        "SyncNamedAccountRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Type of sync operation to perform",
                    "enum": ["createOnly", "updateOnly", "createOrUpdate"]
                },
                "dedupeBy": {
                    "type": "string",
                    "description": "Field to deduplicate on.  If the value in the field for a given record is not unique, an error will be returned for the individual record."
                },
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/NamedAccount"
                    }
                }
            }
        },
        "DeleteNamedAccountListRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "deleteBy": {
                    "type": "string",
                    "description": "Key to use for deletion of the record"
                },
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/NamedAccountList"
                    }
                }
            }
        },
        "ResponseOfCampaign": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/Campaign"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "DateRange": {
            "type": "object",
            "properties": {
                "endAt": {
                    "type": "string",
                    "description": "End of date range filter (ISO 8601-format)"
                },
                "startAt": {
                    "type": "string",
                    "description": "Start of date range filter (ISO-8601 format)"
                }
            }
        },
        "ResponseOfChangeLeadProgramStatusOutputData": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ChangeLeadProgramStatusOutputData"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfVoid": {
            "type": "object",
            "required": ["errors", "requestId", "success", "warnings"],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ImportCustomObjectResponse": {
            "type": "object",
            "required": ["batchId", "objectApiName", "operation", "status"],
            "properties": {
                "batchId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of the import batch"
                },
                "importTime": {
                    "type": "string",
                    "description": "Time spent on the batch"
                },
                "message": {
                    "type": "string",
                    "description": "Status message of the batch"
                },
                "numOfObjectsProcessed": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of rows processed so far"
                },
                "numOfRowsFailed": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of rows failed so far"
                },
                "numOfRowsWithWarning": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of rows with a warning so far"
                },
                "objectApiName": {
                    "type": "string",
                    "description": "Object API Name"
                },
                "operation": {
                    "type": "string",
                    "description": "Bulk operation type. Can be import or export"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the batch"
                }
            },
            "description": "Response containing import status information"
        },
        "ImportProgramMemberResponse": {
            "type": "object",
            "required": ["batchId", "importId", "status"],
            "properties": {
                "batchId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of the import job"
                },
                "importId": {
                    "type": "string",
                    "description": "Unique integer id of the import job"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the import job"
                }
            },
            "description": "Response containing import status information"
        },
        "AddNamedAccountListMemberRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/NamedAccount"
                    }
                }
            }
        },
        "ExportActivityFilter": {
            "type": "object",
            "required": ["createdAt"],
            "properties": {
                "activityTypeIds": {
                    "type": "array",
                    "description": "List of activity type ids to filter on",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "primaryAttributeValueIds": {
                    "type": "array",
                    "description": "List of primary attribute ids to filter on",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "primaryAttributeValues": {
                    "type": "array",
                    "description": "List of primary attribute values to filter on",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "description": "Date range to filter new activities on",
                    "$ref": "#/definitions/DateRange"
                }
            }
        },
        "ResponseOfListOperationOutputData": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ListOperationOutputData"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "Campaign": {
            "type": "object",
            "required": ["createdAt", "id", "name", "type", "updatedAt"],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the campaign is active.  Only applicable to trigger campaigns"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Datetime when the campaign was created"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the Smart Campaign"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of the Smart Campaign"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Smart Campaign"
                },
                "programId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of the parent program if applicable"
                },
                "programName": {
                    "type": "string",
                    "description": "Name of the parent program if applicable"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the Smart Campaign",
                    "enum": ["batch", "trigger"]
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Datetime when the campaign was most recently updated"
                },
                "workspaceName": {
                    "type": "string",
                    "description": "Name of the parent workspace if applicable"
                }
            },
            "description": "Record of a Marketo Smart Campaign"
        },
        "DeleteNamedAccountRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "deleteBy": {
                    "type": "string",
                    "description": "Key to use for deletion of the record"
                },
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/NamedAccount"
                    }
                }
            }
        },
        "ResponseOfLead": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/Lead"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfLeadField": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/LeadField"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfUpdateLeadField": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/LeadFieldStatus"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfCreateLeadField": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/LeadFieldStatus"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfPushLeadToMarketo": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/Lead"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfSubmitForm": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/FormResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "FormResponse": {
            "type": "object",
            "description": "Disposition of lead",
            "required": ["id", "status"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of lead"
                },
                "status": {
                    "type": "string",
                    "enum": ["created", "updated", "skipped"]
                },
                "reasons": {
                    "type": "array",
                    "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
                    "items": {
                        "$ref": "#/definitions/Reason"
                    }
                }
            }
        },
        "Activity": {
            "type": "object",
            "required": [
                "activityDate",
                "activityTypeId",
                "attributes",
                "id",
                "leadId"
            ],
            "properties": {
                "activityDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Datetime of the activity"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of the activity type"
                },
                "attributes": {
                    "type": "array",
                    "description": "List of secondary attributes",
                    "items": {
                        "$ref": "#/definitions/Attribute"
                    }
                },
                "campaignId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of the associated Smart Campaign, if applicable"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Integer id of the activity. This value could exceed Int.MAX. For instances which have been migrated to Activity Service, this field may not be present, and should not be treated as unique."
                },
                "leadId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of the lead associated to the activity"
                },
                "marketoGUID": {
                    "type": "string",
                    "description": "Unique id of the activity (128 character string)"
                },
                "primaryAttributeValue": {
                    "type": "string",
                    "description": "Value of the primary attribute"
                },
                "primaryAttributeValueId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of the primary attribute field"
                }
            }
        },
        "CustomActivityTypeAttributeRequest": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "description": "List of attributes to add to the activity type",
                    "items": {
                        "$ref": "#/definitions/CustomActivityTypeAttribute"
                    }
                }
            }
        },
        "AddCustomObjectTypeFieldsRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of fields to add to custom object type",
                    "items": {
                        "$ref": "#/definitions/AddCustomObjectTypeField"
                    }
                }
            }
        },
        "AddCustomObjectTypeField": {
            "type": "object",
            "required": ["name", "displayName", "dataType"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "API Name of custom object field"
                },
                "displayName": {
                    "type": "string",
                    "description": "UI display-name of the custom object field"
                },
                "dataType": {
                    "type": "string",
                    "description": "Datatype of the custom object field"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the custom object field"
                },
                "isDedupeField": {
                    "type": "boolean",
                    "description": "Set to true to enable field as unique identifier for deduplicating records.  Default is false"
                },
                "relatedTo": {
                    "description": "Define custom object link field",
                    "$ref": "#/definitions/CustomObjectTypeFieldRelatedTo"
                }
            }
        },
        "UpdateCustomObjectTypeFieldRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "API Name of custom object field"
                },
                "displayName": {
                    "type": "string",
                    "description": "UI display-name of the custom object field"
                },
                "dataType": {
                    "type": "string",
                    "description": "Datatype of the custom object field"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the custom object field"
                },
                "isDedupeField": {
                    "type": "boolean",
                    "description": "Set to true to enable field as unique identifier for deduplicating records.  Default is false"
                },
                "relatedTo": {
                    "description": "Define custom object link field",
                    "$ref": "#/definitions/CustomObjectTypeFieldRelatedTo"
                }
            }
        },
        "CustomObjectTypeFieldRelatedTo": {
            "type": "object",
            "required": ["name", "field"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of linkable object type"
                },
                "field": {
                    "type": "string",
                    "description": "Foreign field to which the parent is linked"
                }
            }
        },
        "DeleteCustomObjectTypeFieldsRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of fields to delete from the custom object type",
                    "items": {
                        "$ref": "#/definitions/DeleteCustomObjectTypeField"
                    }
                }
            }
        },
        "DeleteCustomObjectTypeField": {
            "type": "object",
            "required": ["name"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "API Name of custom object type field"
                }
            }
        },
        "TriggerCampaignData": {
            "type": "object",
            "required": ["leads"],
            "properties": {
                "leads": {
                    "type": "array",
                    "description": "List of leads for input",
                    "items": {
                        "$ref": "#/definitions/InputLead"
                    }
                },
                "tokens": {
                    "type": "array",
                    "description": "List of my tokens to replace during the run of the target campaign.  The tokens must be available in a parent program or folder to be replaced during the run",
                    "items": {
                        "$ref": "#/definitions/Token"
                    }
                }
            }
        },
        "ObjectMetaData": {
            "type": "object",
            "required": [
                "createdAt",
                "dedupeFields",
                "description",
                "displayName",
                "pluralName",
                "fields",
                "idField",
                "apiName",
                "relationships",
                "searchableFields",
                "updatedAt",
                "status",
                "version"
            ],
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Datetime when the object type was created"
                },
                "dedupeFields": {
                    "type": "array",
                    "description": "List of dedupe fields.  Arrays with multiple members are compound keys",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the object type"
                },
                "displayName": {
                    "type": "string",
                    "description": "UI display-name of the object type"
                },
                "pluralName": {
                    "type": "string",
                    "description": "UI plural-name of the custom object type"
                },
                "fields": {
                    "type": "array",
                    "description": "List of fields available on the object type",
                    "items": {
                        "$ref": "#/definitions/ObjectField"
                    }
                },
                "idField": {
                    "type": "string",
                    "description": "Primary id key of the object type"
                },
                "apiName": {
                    "type": "string",
                    "description": "Name of the object type"
                },
                "relationships": {
                    "type": "array",
                    "description": "List of relationships which the object has",
                    "items": {
                        "$ref": "#/definitions/ObjectRelation"
                    }
                },
                "searchableFields": {
                    "type": "array",
                    "description": "List of fields valid for use as a filter type in a query",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Datetime when the object type was most recently updated"
                },
                "state": {
                    "type": "string",
                    "description": "Approval state of object type",
                    "enum": ["draft", "approved", "approvedWithDraft"]
                },
                "version": {
                    "type": "string",
                    "description": "Version of object type that is returned in response",
                    "enum": ["draft", "approved"]
                }
            }
        },
        "ObjectLinkableObject": {
            "type": "object",
            "required": ["name", "displayName", "fields"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Link object API name"
                },
                "displayName": {
                    "type": "string",
                    "description": "Link object UI display-name"
                },
                "fields": {
                    "type": "array",
                    "description": "List of fields available on the link object",
                    "items": {
                        "$ref": "#/definitions/ObjectLinkableObjectField"
                    }
                }
            }
        },
        "ObjectDependentAsset": {
            "type": "object",
            "required": ["assetType", "assetId", "assetName"],
            "properties": {
                "assetType": {
                    "type": "string",
                    "description": "Type of asset"
                },
                "assetId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "ID of asset"
                },
                "assetName": {
                    "type": "string",
                    "description": "Name of asset"
                },
                "usedFields": {
                    "type": "array",
                    "description": "List of associated fields",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ObjectLinkableObjectField": {
            "type": "object",
            "required": ["name", "displayName", "dataType"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Link field API name"
                },
                "displayName": {
                    "type": "string",
                    "description": "Link field name"
                },
                "dataType": {
                    "type": "string",
                    "description": "Link field data type"
                }
            }
        },
        "CustomActivityTypeRequest": {
            "type": "object",
            "required": [
                "apiName",
                "name",
                "triggerName",
                "filterName",
                "primaryAttribute"
            ],
            "properties": {
                "apiName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "filterName": {
                    "type": "string",
                    "description": "Human-readable name of the associated filter"
                },
                "name": {
                    "type": "string",
                    "description": "Human-readable display name of the activity type"
                },
                "primaryAttribute": {
                    "description": "Primary attribute of the activity type",
                    "$ref": "#/definitions/CustomActivityTypeAttribute"
                },
                "triggerName": {
                    "type": "string",
                    "description": "Human-readable name of the associated trigger"
                }
            }
        },
        "ListOperationRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of leads for input",
                    "items": {
                        "$ref": "#/definitions/LeadInputData"
                    }
                }
            }
        },
        "ResponseOfLeadPartition": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/LeadPartition"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfObjectMetaData": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ObjectMetaData"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfCustomObjectTypeFieldDataTypes": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "List of permissible data types for custom object fields",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfObjectLinkableObject": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "List of permissible objects to use as custom object link field",
                    "items": {
                        "$ref": "#/definitions/ObjectLinkableObject"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfObjectDependentAssets": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "List of dependent assets for a custom object type",
                    "items": {
                        "$ref": "#/definitions/ObjectDependentAsset"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "InputLead": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique integer id of a lead record"
                }
            },
            "description": "Lead record containing only lead id"
        },
        "CustomActivityType": {
            "type": "object",
            "properties": {
                "apiName": {
                    "type": "string",
                    "description": "API Name of the type.  The API name must be unique and alphanumeric, containing at least one letter.  It is highly recommended to prepend a unique namespace of up to sixteen characters to the API name.  Required on creation"
                },
                "attributes": {
                    "type": "array",
                    "description": "List of attributes for the activity type.  May only be added or update through Create or Update Custom Activity Type Attributes",
                    "items": {
                        "$ref": "#/definitions/CustomActivityTypeAttribute"
                    }
                },
                "createdAt": {
                    "type": "string",
                    "description": "Datetime when the activity type was created"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the activity type"
                },
                "filterName": {
                    "type": "string",
                    "description": "Human-readable name for the associated filter of the activity type.  Required on creation"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string",
                    "description": "Human-readable display name of the type.  Required on creation"
                },
                "primaryAttribute": {
                    "description": "Primary Attribute of the activity type.  Required on creation",
                    "$ref": "#/definitions/CustomActivityTypeAttribute"
                },
                "status": {
                    "type": "string",
                    "description": "State of the activity type",
                    "enum": [
                        "draft",
                        "approved",
                        "deleted",
                        "approved with draft"
                    ]
                },
                "triggerName": {
                    "type": "string",
                    "description": "Human-readable name for the associated trigger of the activity type.  Required on creation"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Datetime when the activity type was most recently updated"
                }
            }
        },
        "ChangeLeadProgramStatusRequest": {
            "type": "object",
            "required": ["input", "status"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of leads for input",
                    "items": {
                        "$ref": "#/definitions/LeadLookupInputData"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Program status of the record.  Permissible values can be retrieve from the Get Channel by Name API for the designated program's channel"
                }
            }
        },
        "ResponseOfNamedAccountList": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/NamedAccountList"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfLeadAttribute": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/LeadAttribute"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfLeadAttribute2": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/LeadAttribute2"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfProgramMemberAttributes": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ProgramMemberAttribute"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfProgramMemberAttributes2": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ProgramMemberAttribute2"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfCompany": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/CompanyResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfUsageData": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/UsageData"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfErrorsData": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ErrorsData"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ObjectRelation": {
            "type": "object",
            "required": ["field", "relatedTo", "type"],
            "properties": {
                "field": {
                    "type": "string",
                    "description": "API Name of link field"
                },
                "relatedTo": {
                    "description": "Object to which the field is linked",
                    "$ref": "#/definitions/RelatedObject"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the relationship field"
                }
            }
        },
        "Warning": {
            "type": "object",
            "required": ["code", "message"],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer code of the warning"
                },
                "message": {
                    "type": "string",
                    "description": "Message describing the warning"
                }
            }
        },
        "Empty": {},
        "ResponseOfExportResponse": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ExportResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfExportResponseWithToken": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ExportResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfCustomObject": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/CustomObject"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfProgramMember": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ProgramMember"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ProgramMember": {
            "type": "object",
            "description": "Program member record.  Always contains lead id, but may have any number of other fields, depending on the fields available in the target instance.",
            "required": [
                "seq",
                "leadId",
                "reachedSuccess",
                "programId",
                "acquiredBy",
                "membershipDate"
            ],
            "properties": {
                "seq": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
                },
                "leadId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of a lead record"
                },
                "reachedSuccess": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if program member has reached success criteria for program"
                },
                "programId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of a program"
                },
                "acquiredBy": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if program member was acquired by program"
                },
                "membershipDate": {
                    "type": "string",
                    "description": "Date the lead first became a member of the program"
                }
            }
        },
        "ResponseOfProgramMemberStatus": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ProgramMemberStatusResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfProgramMemberData": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ProgramMemberStatusResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfProgramMemberDelete": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ProgramMemberDeleteResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfCustomObjectType": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Empty array",
                    "items": {
                        "$ref": "#/definitions/Empty"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "NamedAccount": {
            "type": "object",
            "required": ["marketoGUID", "seq"],
            "properties": {
                "marketoGUID": {
                    "type": "string",
                    "description": "Unique GUID of the custom object records"
                },
                "reasons": {
                    "type": "array",
                    "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
                    "items": {
                        "$ref": "#/definitions/Reason"
                    }
                },
                "seq": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "created",
                        "updated",
                        "deleted",
                        "skipped",
                        "added",
                        "removed"
                    ]
                }
            }
        },
        "ObservableOfInputStreamRangeContent": {
            "type": "object"
        },
        "ImportLeadResponse": {
            "type": "object",
            "required": ["batchId", "numOfLeadsProcessed", "status"],
            "properties": {
                "batchId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of the import batch"
                },
                "importId": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "numOfLeadsProcessed": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of rows processed so far"
                },
                "numOfRowsFailed": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of rows failed so far"
                },
                "numOfRowsWithWarning": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of rows with a warning so far"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the batch"
                }
            },
            "description": "Response containing import status information"
        },
        "PushLeadToMarketoRequest": {
            "type": "object",
            "properties": {
                "input": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Lead"
                    }
                },
                "lookupField": {
                    "type": "string"
                },
                "partitionName": {
                    "type": "string"
                },
                "programName": {
                    "type": "string"
                },
                "programStatus": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "SubmitFormRequest": {
            "type": "object",
            "required": ["input", "formId"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "Single array item that contains form fields and visitor data to use during a form submittal",
                    "items": {
                        "$ref": "#/definitions/Form"
                    }
                },
                "formId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of the form"
                }
            }
        },
        "Form": {
            "type": "object",
            "required": ["leadFormFields"],
            "properties": {
                "leadFormFields": {
                    "description": "List of form fields.  Email is required field",
                    "$ref": "#/definitions/LeadFormFields"
                },
                "visitorData": {
                    "description": "Page visit-related data",
                    "$ref": "#/definitions/VisitorData"
                },
                "cookie": {
                    "type": "string",
                    "description": "Munchkin cookie value used to associate new lead with anonymous activities.  e.g. id:123-XYZ-456&token:_mch-marketo.com-1594662481190-60776"
                }
            },
            "description": "Form field data.  May have any number of fields depending on the fields available in the form."
        },
        "LeadFormFields": {
            "type": "object",
            "required": ["email"],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email address used as primary key during lead upsert"
                }
            },
            "description": "Form fields.  Always contains email, but may have any number of other fields depending on the fields available in the form."
        },
        "VisitorData": {
            "type": "object",
            "properties": {
                "pageURL": {
                    "type": "string",
                    "description": "Web page that hosts the form.  Must be a fully formed URL"
                },
                "queryString": {
                    "type": "string",
                    "description": "Web page query string.  Contains one or more ampersand delimited key=value pairs"
                },
                "leadClientIpAddress": {
                    "type": "string",
                    "description": "Client IP address.  IPv4 format.  Used to populate inferred fields on upserted lead record."
                },
                "userAgentString": {
                    "type": "string",
                    "description": "User agent of browser hosting the form"
                }
            },
            "description": "Page visit related data.  Used to populate additional activity fields for filtering and triggering."
        },
        "ChangeLeadProgramStatusOutputData": {
            "type": "object",
            "required": ["id", "status"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique integer id of a lead record"
                },
                "reasons": {
                    "type": "array",
                    "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
                    "items": {
                        "$ref": "#/definitions/Reason"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Program status of the record.  Permissible values can be retrieve from the Get Channel by Name API for the designated program's channel"
                }
            }
        },
        "LeadChangeField": {
            "type": "object",
            "required": ["id", "name", "newValue"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of the change record"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the field which was changed"
                },
                "newValue": {
                    "type": "string",
                    "description": "New value after the change"
                },
                "oldValue": {
                    "type": "string",
                    "description": "Old value before the change"
                }
            },
            "description": "Activity record containing information on a data value change"
        },
        "CustomActivityTypeAttribute": {
            "type": "object",
            "required": ["apiName", "name"],
            "properties": {
                "apiName": {
                    "type": "string",
                    "description": "API Name of the attribute"
                },
                "dataType": {
                    "type": "string",
                    "description": "Data type of the attribute",
                    "enum": [
                        "string",
                        "boolean",
                        "integer",
                        "float",
                        "link",
                        "email",
                        "currency",
                        "date",
                        "datetime",
                        "phone",
                        "text"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "Description of the attribute"
                },
                "isPrimary": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the attribute is the primary attribute of the activity type.  There may only be one primary attribute at a time"
                },
                "name": {
                    "type": "string",
                    "description": "Human-readable display name of the attribute"
                }
            }
        },
        "ResponseOfActivityType": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ActivityType"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "UserCount": {
            "type": "object",
            "required": ["count", "userId"],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of calls made in the time period"
                },
                "userId": {
                    "type": "string",
                    "description": "Id of the user"
                }
            }
        },
        "InputStreamContent": {
            "type": "object",
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "inputStream": {
                    "$ref": "#/definitions/InputStream"
                }
            }
        },
        "SyncCompanyRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Type of sync operation to perform",
                    "enum": ["createOnly", "updateOnly", "createOrUpdate"]
                },
                "dedupeBy": {
                    "type": "string",
                    "description": "Field to deduplicate on.  If the value in the field for a given record is not unique, an error will be returned for the individual record."
                },
                "input": {
                    "type": "array",
                    "description": "List of input records. Each 'Company' object contains a 'searchableField' for lookup purposes, and one or more 'fields' to create or update.  Both can be retrieved using the Describe Companies endpoint",
                    "items": {
                        "$ref": "#/definitions/Company"
                    }
                }
            }
        },
        "ResponseOfSalesPerson": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/SalesPerson"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ProgramMembership": {
            "type": "object",
            "required": ["membershipDate", "progressionStatus"],
            "properties": {
                "acquiredBy": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the lead was acquired by the parent program"
                },
                "isExhausted": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the lead is currently exhausted in the stream, if applicable"
                },
                "membershipDate": {
                    "type": "string",
                    "description": "Date the lead first became a member of the program"
                },
                "nurtureCadence": {
                    "type": "string",
                    "description": "Cadence of the parent stream if applicable"
                },
                "progressionStatus": {
                    "type": "string",
                    "description": "Program status of the lead in the parent program"
                },
                "reachedSuccess": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the lead is in a success-status in the parent program"
                },
                "stream": {
                    "type": "string",
                    "description": "Stream that the lead is a member of, if the parent program is an engagement program"
                }
            }
        },
        "Program": {
            "type": "object",
            "required": [
                "id",
                "progressionStatus",
                "isExhausted",
                "acquiredBy",
                "reachedSuccess",
                "membershipDate",
                "updatedAt"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique integer id of a program record"
                },
                "acquiredBy": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the lead was acquired by the parent program"
                },
                "isExhausted": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the lead is currently exhausted in the stream, if applicable"
                },
                "membershipDate": {
                    "type": "string",
                    "description": "Date the lead first became a member of the program"
                },
                "nurtureCadence": {
                    "type": "string",
                    "description": "Cadence of the parent stream if applicable"
                },
                "progressionStatus": {
                    "type": "string",
                    "description": "Program status of the lead in the parent program"
                },
                "reachedSuccess": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the lead is in a success-status in the parent program"
                },
                "stream": {
                    "type": "string",
                    "description": "Stream that the lead is a member of, if the parent program is an engagement program"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Datetime when the program was most recently updated"
                }
            }
        },
        "RelatedObject": {
            "type": "object",
            "required": ["field", "name"],
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Name of link field (within link object)"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the link object"
                }
            }
        },
        "ResponseOfLeadChange": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/LeadChange"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ExportResponse": {
            "type": "object",
            "required": ["exportId", "status"],
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the export request was created"
                },
                "errorMsg": {
                    "type": "string",
                    "description": "Error message in case of \"Failed\" status"
                },
                "exportId": {
                    "type": "string",
                    "description": "Unique id of the export job"
                },
                "fileSize": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Size of exported file in bytes. This will have a value only when status is \"Completed\", otherwise null"
                },
                "fileChecksum": {
                    "type": "string",
                    "description": "SHA-256 hash of exported file. This will have a value only when status is \"Completed\", otherwise null"
                },
                "finishedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Finish time of export job. This will have value only when status is \"Completed\" or \"Failed\", otherwise null"
                },
                "format": {
                    "type": "string",
                    "description": "Format of file as given in the request (\"CSV\", \"TSV\", \"SSV\")"
                },
                "numberOfRecords": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of records in the export file.  This will have value only when status is \"Completed\", otherwise null"
                },
                "queuedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Queue time of export job. This will have value when \"Queued\" status is reached, before that null"
                },
                "startedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start time of export job. This will have value when \"Processing\" status is reached, before that null"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the export job (\"Created\",\"Queued\",\"Processing\",\"Canceled\",\"Completed\",\"Failed\")"
                }
            },
            "description": "Response containing export job status information"
        },
        "ResponseOfCustomActivity": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/CustomActivity"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "LookupCustomObjectRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "batchSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Maximum number of records to return in the response.  Max and default is 300"
                },
                "fields": {
                    "type": "array",
                    "description": "List of fields to return. If not specified, will return the following fields: marketoGuid, dedupeFields, updatedAt, createdAt, filterType",
                    "items": {
                        "type": "string"
                    }
                },
                "filterType": {
                    "type": "string",
                    "description": "Field to search on.  Valid values are: dedupeFields, idFields, and any field defined in searchableFields attribute of Describe endpoint.  Default is dedupeFields"
                },
                "input": {
                    "type": "array",
                    "description": "Search values when using a compound key.  Each element must include each of the fields in the compound key.  Compound keys are determined by the contents of \"dedupeFields\" in the Describe result for the object",
                    "items": {
                        "$ref": "#/definitions/CustomObject"
                    }
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token returned from a previous response"
                }
            }
        },
        "CompanyResponse": {
            "type": "object",
            "required": ["id", "seq"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique integer id of the company record"
                },
                "reasons": {
                    "type": "array",
                    "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
                    "items": {
                        "$ref": "#/definitions/Reason"
                    }
                },
                "seq": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
                },
                "status": {
                    "type": "string",
                    "description": "Status of the operation performed on the record",
                    "enum": [
                        "created",
                        "updated",
                        "deleted",
                        "skipped",
                        "added",
                        "removed"
                    ]
                }
            },
            "description": "Company record.  May include any additional fields listed in the corresponding describe method"
        },
        "Company": {
            "type": "object",
            "description": "Company record.  May include any additional 'fields' listed in the Describe Companies endpoint",
            "properties": {
                "externalCompanyId": {
                    "type": "string",
                    "description": "Unique id of the company record"
                },
                "id": {
                    "type": "integer",
                    "description": "Unique integer id of the company record"
                },
                "company": {
                    "type": "string",
                    "description": "Unique name of the company record"
                }
            }
        },
        "Reason": {
            "type": "object",
            "required": ["code", "message"],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Integer code of the reason"
                },
                "message": {
                    "type": "string",
                    "description": "Message describing the reason for the status of the operation"
                }
            }
        },
        "FileRange": {
            "type": "object",
            "properties": {
                "end": {
                    "type": "integer",
                    "format": "int64"
                },
                "start": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ObservableOfInputStreamContent": {
            "type": "object"
        },
        "ErrorCount": {
            "type": "object",
            "required": ["count", "errorCode"],
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of occurences of the error"
                },
                "errorCode": {
                    "type": "string",
                    "description": "Integer error code of the error"
                }
            }
        },
        "LeadMapAttribute": {
            "type": "object",
            "required": ["name"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the attribute"
                },
                "readOnly": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the attribute is read only"
                }
            }
        },
        "LeadLookupInputData": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique integer id of a lead record"
                }
            }
        },
        "SalesPerson": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Unique integer id of the salesperson record"
                },
                "reasons": {
                    "type": "array",
                    "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
                    "items": {
                        "$ref": "#/definitions/Reason"
                    }
                },
                "seq": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
                },
                "status": {
                    "type": "string",
                    "description": "Status of the operation performed on the record",
                    "enum": [
                        "created",
                        "updated",
                        "deleted",
                        "skipped",
                        "added",
                        "removed"
                    ]
                }
            }
        },
        "RemoveNamedAccountListMemberRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/NamedAccount"
                    }
                }
            }
        },
        "Token": {
            "type": "object",
            "required": ["name", "value"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the token.  Should be formatted as \"{{my.name}}\""
                },
                "value": {
                    "type": "string",
                    "description": "Value of the token"
                }
            }
        },
        "Error": {
            "type": "object",
            "required": ["code", "message"],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Error code of the error.  See full list of error codes <a href=\"https://developers.marketo.com/rest-api/error-codes/\">here</a>"
                },
                "message": {
                    "type": "string",
                    "description": "Message describing the cause of the error"
                }
            }
        },
        "ExportLeadFilter": {
            "type": "object",
            "required": [
                "createdAt",
                "smartListId",
                "smartListName",
                "staticListId",
                "staticListName",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "description": "Date range to filter new leads on",
                    "$ref": "#/definitions/DateRange"
                },
                "smartListId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of smart list to retrieve leads from"
                },
                "smartListName": {
                    "type": "string",
                    "description": "Name of smart list to retrieve leads from"
                },
                "staticListId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of static list to retrieve leads from"
                },
                "staticListName": {
                    "type": "string",
                    "description": "Name of static list to retrieve leads from"
                },
                "updatedAt": {
                    "description": "Date range to filter updated leads on",
                    "$ref": "#/definitions/DateRange"
                }
            }
        },
        "ExportCustomObjectFilter": {
            "type": "object",
            "required": [
                "smartListId",
                "smartListName",
                "staticListId",
                "staticListName"
            ],
            "properties": {
                "smartListId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of smart list to retrieve leads from"
                },
                "smartListName": {
                    "type": "string",
                    "description": "Name of smart list to retrieve leads from"
                },
                "staticListId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of static list to retrieve leads from"
                },
                "staticListName": {
                    "type": "string",
                    "description": "Name of static list to retrieve leads from"
                }
            }
        },
        "ExportProgramMemberFilter": {
            "type": "object",
            "required": ["programId"],
            "properties": {
                "programId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of program to retrieve members from"
                }
            }
        },
        "InputStreamRangeContent": {
            "type": "object",
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "fileRange": {
                    "$ref": "#/definitions/FileRange"
                },
                "inputStream": {
                    "$ref": "#/definitions/InputStream"
                },
                "length": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "DeleteCompanyRequest": {
            "type": "object",
            "properties": {
                "deleteBy": {
                    "type": "string",
                    "description": "Field to delete company records by.  Key may be \"dedupeFields\" or \"idField\""
                },
                "input": {
                    "type": "array",
                    "description": "List of company objects. Companies in the list should only contain a member matching the dedupeBy value. Each 'Company' object contains a 'searchableField' for lookup purposes which can be retrieved using the Describe Companies endpoint",
                    "items": {
                        "$ref": "#/definitions/Company"
                    }
                }
            }
        },
        "ResponseOfImportCustomObjectResponse": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "moreResult": {
                    "type": "boolean",
                    "example": false,
                    "description": "Boolean indicating if there are more results in subsequent pages"
                },
                "nextPageToken": {
                    "type": "string",
                    "description": "Paging token given if the result set exceeded the allowed batch size"
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ImportCustomObjectResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "ResponseOfImportProgramMemberResponse": {
            "type": "object",
            "required": [
                "errors",
                "requestId",
                "result",
                "success",
                "warnings"
            ],
            "properties": {
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "requestId": {
                    "type": "string",
                    "description": "Id of the request made"
                },
                "result": {
                    "type": "array",
                    "description": "Array of results for individual records in the operation, may be empty",
                    "items": {
                        "$ref": "#/definitions/ImportProgramMemberResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the request succeeded"
                },
                "warnings": {
                    "type": "array",
                    "description": "Array of warnings given for the operation",
                    "items": {
                        "$ref": "#/definitions/Warning"
                    }
                }
            }
        },
        "CustomObject": {
            "type": "object",
            "required": ["marketoGUID", "seq"],
            "properties": {
                "marketoGUID": {
                    "type": "string",
                    "description": "Unique GUID of the custom object records"
                },
                "reasons": {
                    "type": "array",
                    "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
                    "items": {
                        "$ref": "#/definitions/Reason"
                    }
                },
                "seq": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
                }
            }
        },
        "ProgramMemberStatusResponse": {
            "type": "object",
            "required": ["status", "leadId", "seq"],
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the operation performed on the record",
                    "enum": ["updated", "skipped"]
                },
                "reasons": {
                    "type": "array",
                    "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
                    "items": {
                        "$ref": "#/definitions/Reason"
                    }
                },
                "leadId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of the lead associated to the program member"
                },
                "seq": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
                }
            }
        },
        "ProgramMemberDataResponse": {
            "type": "object",
            "required": ["status", "leadId", "seq"],
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the operation performed on the record",
                    "enum": ["created", "updated", "skipped"]
                },
                "reasons": {
                    "type": "array",
                    "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
                    "items": {
                        "$ref": "#/definitions/Reason"
                    }
                },
                "leadId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of the lead associated to the program member"
                },
                "seq": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
                }
            }
        },
        "ProgramMemberDeleteResponse": {
            "type": "object",
            "required": ["status", "leadId", "seq"],
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the operation performed on the record",
                    "enum": ["deleted", "skipped"]
                },
                "reasons": {
                    "type": "array",
                    "description": "List of reasons why an operation did not succeed.  Reasons are only present in API responses and should not be submitted",
                    "items": {
                        "$ref": "#/definitions/Reason"
                    }
                },
                "leadId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of the lead associated to the program member"
                },
                "seq": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Integer indicating the sequence of the record in response.  This value is correlated to the order of the records included in the request input.  Seq should only be part of responses and should not be submitted."
                }
            }
        },
        "ExportActivityRequest": {
            "type": "object",
            "required": ["fields", "filter"],
            "properties": {
                "columnHeaderNames": {
                    "description": "File header field names override (corresponds with REST API name)",
                    "$ref": "#/definitions/ColumnHeaderNames"
                },
                "fields": {
                    "type": "array",
                    "description": "Array of strings containing field values.  Used to reduce the number of fields contained in export file.  Select one or more of: marketoGUID, leadId, activityDate, activityTypeId, campaignId, primaryAttributeValueId, primaryAttributeValue",
                    "items": {
                        "type": "string"
                    }
                },
                "filter": {
                    "description": "Record selection criteria. \"createAt\" is required, \"activityTypeIds\", \"primaryAttributeValueIds\", and \"primaryAttributeValues\" are optional",
                    "$ref": "#/definitions/ExportActivityFilter"
                },
                "format": {
                    "type": "string",
                    "description": "File format to create(\"CSV\", \"TSV\", \"SSV\").  Default is \"CSV\""
                }
            }
        },
        "UsageData": {
            "type": "object",
            "required": ["date"],
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date of the collected calls"
                },
                "total": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of errors in the time period"
                },
                "users": {
                    "type": "array",
                    "description": "Counts for individual users",
                    "items": {
                        "$ref": "#/definitions/UserCount"
                    }
                }
            }
        },
        "ErrorsData": {
            "type": "object",
            "required": ["date"],
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date of the collected calls"
                },
                "errors": {
                    "type": "array",
                    "description": "Counts for individual error codes",
                    "items": {
                        "$ref": "#/definitions/ErrorCount"
                    }
                },
                "total": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of errors in the time period"
                }
            }
        },
        "StaticList": {
            "type": "object",
            "required": ["createdAt", "id", "name", "updatedAt"],
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Datetime when the list was created"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the static list"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of the static list"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the static list"
                },
                "programName": {
                    "type": "string",
                    "description": "Name of the program"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Datetime when the list was most recently updated"
                },
                "workspaceName": {
                    "type": "string",
                    "description": "Name of the parent workspace, if applicable"
                }
            }
        },
        "List": {
            "type": "object",
            "required": ["createdAt", "listId", "updatedAt"],
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Datetime when the static list was created"
                },
                "listId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of the static list"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Datetime when the static list was most recently updated"
                }
            }
        },
        "SmartCampaign": {
            "type": "object",
            "required": ["createdAt", "smartCampaignId", "updatedAt"],
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Datetime when the smart campaign was created"
                },
                "smartCampaignId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of the smart campaign"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Datetime when the smart campaign was most recently updated"
                }
            }
        },
        "CustomActivity": {
            "type": "object",
            "required": [
                "activityDate",
                "activityTypeId",
                "attributes",
                "errors",
                "id",
                "leadId",
                "primaryAttributeValue"
            ],
            "properties": {
                "activityDate": {
                    "type": "string",
                    "description": "Datetime of the activity"
                },
                "activityTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of the activity type"
                },
                "apiName": {
                    "type": "string"
                },
                "attributes": {
                    "type": "array",
                    "description": "List of secondary attributes",
                    "items": {
                        "$ref": "#/definitions/Attribute"
                    }
                },
                "errors": {
                    "type": "array",
                    "description": "Array of errors that occurred if the request was unsuccessful",
                    "items": {
                        "$ref": "#/definitions/Error"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Integer id of the activity.  For instances which have been migrated to Activity Service, this field may not be present, and should not be treated as unique."
                },
                "leadId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of the lead associated to the activity"
                },
                "marketoGUID": {
                    "type": "string",
                    "description": "Unique id of the activity (128 character string)"
                },
                "primaryAttributeValue": {
                    "type": "string",
                    "description": "Value of the primary attribute"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the operation performed on the record",
                    "enum": [
                        "created",
                        "updated",
                        "deleted",
                        "skipped",
                        "added",
                        "removed"
                    ]
                }
            }
        },
        "SyncNamedAccountListRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Type of sync operation to perform",
                    "enum": ["createOnly", "updateOnly"]
                },
                "dedupeBy": {
                    "type": "string",
                    "description": "Field to deduplicate on.  If the value in the field for a given record is not unique, an error will be returned for the individual record."
                },
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/NamedAccountList"
                    }
                }
            }
        },
        "ScheduleCampaignData": {
            "type": "object",
            "properties": {
                "cloneToProgramName": {
                    "type": "string",
                    "description": "Name of the resulting program.  When set, this attribute will cause the campaign, parent program, and all of its assets, to be created with the resulting new name.  The parent program will be cloned and the newly created campaign will be scheduled.  The resulting program is created underneath the parent.  Programs with snippets, push notifications, in-app messages, static lists, reports, and social assets may not be cloned in this way"
                },
                "runAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Datetime to run the campaign at.  If unset, the campaign will be run five minutes after the call is made"
                },
                "tokens": {
                    "type": "array",
                    "description": "List of my tokens to replace during the run of the target campaign.  The tokens must be available in a parent program or folder to be replaced during the run",
                    "items": {
                        "$ref": "#/definitions/Token"
                    }
                }
            }
        },
        "ObjectField": {
            "type": "object",
            "properties": {
                "dataType": {
                    "type": "string",
                    "description": "Datatype of the field"
                },
                "displayName": {
                    "type": "string",
                    "description": "UI display-name of the field"
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Max length of the field.  Only applicable to text, string, and text area."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the field"
                },
                "updateable": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the field is updateable"
                },
                "crmManaged": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether the field is managed by CRM (native sync)"
                }
            }
        },
        "ColumnHeaderNames": {
            "type": "object",
            "required": ["name", "value"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "REST API name for header field"
                },
                "value": {
                    "type": "string",
                    "description": "Value for header field"
                }
            }
        },
        "DeleteCustomObjectRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "deleteBy": {
                    "type": "string",
                    "description": "Field to delete records by.  Permissible values are idField or dedupeFields as indicated by the result of the corresponding describe record"
                },
                "input": {
                    "type": "array",
                    "description": "List of input records",
                    "items": {
                        "$ref": "#/definitions/CustomObject"
                    }
                }
            }
        },
        "UpdateLeadPartitionRequest": {
            "type": "object",
            "required": ["input"],
            "properties": {
                "input": {
                    "type": "array",
                    "description": "List of leads for input",
                    "items": {
                        "$ref": "#/definitions/UpdateLeadPartition"
                    }
                }
            }
        },
        "UpdateLeadPartition": {
            "type": "object",
            "required": ["id", "partitionName"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique integer id of a lead record"
                },
                "partitionName": {
                    "type": "string",
                    "description": "Name of the partition"
                }
            }
        }
    }
}
