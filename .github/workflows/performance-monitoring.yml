name: Performance Monitoring

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run performance benchmarks daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  performance-benchmark:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run Performance Benchmarks
      run: node performance-benchmark-framework.js
      timeout-minutes: 20
    
    - name: Upload Performance Report
      uses: actions/upload-artifact@v4
      with:
        name: performance-report-node-${{ matrix.node-version }}
        path: |
          performance-benchmark-report.json
          performance-benchmark-report.md
          performance-summary.txt
        retention-days: 30
    
    - name: Comment Performance Results on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Read performance summary
          const summaryPath = path.join(process.cwd(), 'performance-summary.txt');
          if (fs.existsSync(summaryPath)) {
            const summary = fs.readFileSync(summaryPath, 'utf8');
            
            // Read detailed report
            const reportPath = path.join(process.cwd(), 'performance-benchmark-report.md');
            const report = fs.existsSync(reportPath) ? fs.readFileSync(reportPath, 'utf8') : '';
            
            const body = `## üöÄ Performance Benchmark Results (Node.js ${{ matrix.node-version }})

          \`\`\`
          ${summary}
          \`\`\`

          <details>
          <summary>üìä Detailed Performance Report</summary>

          ${report}

          </details>

          > This comment is automatically generated by the performance monitoring workflow.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
          }
    
    - name: Check Performance Thresholds
      run: |
        # Read performance summary and check if it passes
        if grep -q "OVERALL STATUS: FAIL" performance-summary.txt; then
          echo "‚ùå Performance benchmarks failed to meet thresholds"
          cat performance-summary.txt
          exit 1
        else
          echo "‚úÖ Performance benchmarks passed all thresholds"
          cat performance-summary.txt
        fi

  bundle-size-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build packages with bundle analysis
      run: |
        # Build all packages with bundle analysis
        cd packages/ui-core && npm run build:analyze || true
        cd ../ui-vue && npm run build:analyze || true
        cd ../ui-svelte && npm run build:analyze || true
        cd ../ui-angular && npm run build:analyze || true
    
    - name: Upload Bundle Analysis Reports
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis
        path: |
          packages/*/dist/stats.html
          packages/*/dist/stats.json
        retention-days: 7

  lighthouse-performance:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build React template
      run: |
        cd packages/devtools/frigg-cli/templates/react
        npm install
        npm run build
    
    - name: Start static server
      run: |
        cd packages/devtools/frigg-cli/templates/react
        npx serve -s dist -l 3000 &
        sleep 5
    
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          http://localhost:3000
        configPath: './lighthouse.config.js'
        uploadArtifacts: true
        temporaryPublicStorage: true
    
    - name: Upload Lighthouse Reports
      uses: actions/upload-artifact@v4
      with:
        name: lighthouse-reports
        path: .lighthouseci
        retention-days: 7

  performance-regression-check:
    runs-on: ubuntu-latest
    needs: [performance-benchmark]
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Download current performance report
      uses: actions/download-artifact@v4
      with:
        name: performance-report-node-20
        path: ./current-results
    
    - name: Get baseline performance data
      run: |
        # Try to get performance data from main branch
        git checkout origin/main -- performance-benchmark-report.json || echo "No baseline found"
        if [ -f performance-benchmark-report.json ]; then
          mv performance-benchmark-report.json baseline-performance.json
        fi
    
    - name: Compare performance
      run: |
        node -e "
        const fs = require('fs');
        
        let baseline = {};
        if (fs.existsSync('baseline-performance.json')) {
          baseline = JSON.parse(fs.readFileSync('baseline-performance.json', 'utf8'));
        }
        
        const current = JSON.parse(fs.readFileSync('./current-results/performance-benchmark-report.json', 'utf8'));
        
        console.log('üîç Performance Regression Analysis');
        console.log('===================================');
        
        if (baseline.summary && current.summary) {
          const buildTimeDiff = current.summary.averageBuildTime - baseline.summary.averageBuildTime;
          const bundleSizeDiff = current.summary.averageBundleSize - baseline.summary.averageBundleSize;
          const scoreDiff = current.summary.averagePerformanceScore - baseline.summary.averagePerformanceScore;
          
          console.log(\`Build Time Change: \${buildTimeDiff > 0 ? '+' : ''}\${buildTimeDiff}ms\`);
          console.log(\`Bundle Size Change: \${bundleSizeDiff > 0 ? '+' : ''}\${(bundleSizeDiff/1024).toFixed(2)}KB\`);
          console.log(\`Performance Score Change: \${scoreDiff > 0 ? '+' : ''}\${scoreDiff}\`);
          
          // Flag significant regressions
          if (buildTimeDiff > 5000) console.log('‚ö†Ô∏è WARNING: Build time increased by more than 5 seconds');
          if (bundleSizeDiff > 50000) console.log('‚ö†Ô∏è WARNING: Bundle size increased by more than 50KB');
          if (scoreDiff < -10) console.log('‚ö†Ô∏è WARNING: Performance score decreased by more than 10 points');
          
          if (buildTimeDiff <= 0 && bundleSizeDiff <= 0 && scoreDiff >= 0) {
            console.log('‚úÖ No performance regressions detected');
          }
        } else {
          console.log('‚ÑπÔ∏è No baseline data available for comparison');
        }
        "

  notify-performance-results:
    runs-on: ubuntu-latest
    needs: [performance-benchmark, bundle-size-analysis, lighthouse-performance]
    if: always() && github.event_name == 'schedule'
    
    steps:
    - name: Notify on performance issues
      if: needs.performance-benchmark.result == 'failure'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `üö® Performance Regression Detected - ${new Date().toISOString().split('T')[0]}`,
            body: `The daily performance benchmark has detected performance regressions.
            
            Please review the failed workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            This issue was automatically created by the performance monitoring workflow.`,
            labels: ['performance', 'bug', 'automated']
          });